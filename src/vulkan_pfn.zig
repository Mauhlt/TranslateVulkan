const PFN_vkAllocationFunction = ?*const fn (?*anyopaque, usize, usize, SystemAllocationScope) callconv(.c) ?*anyopaque;
pub const PFN_allocationFunction = PFN_vkAllocationFunction;
const PFN_vkFreeFunction = ?*const fn (?*anyopaque, ?*anyopaque) callconv(.c) void;
pub const PFN_freeFunction = PFN_vkFreeFunction;
const PFN_vkInternalAllocationNotification = ?*const fn (?*anyopaque, usize, InternalAllocationType, SystemAllocationScope) callconv(.c) void;
pub const PFN_internalAllocationNotification = PFN_vkInternalAllocationNotification;
const PFN_vkInternalFreeNotification = ?*const fn (?*anyopaque, usize, InternalAllocationType, SystemAllocationScope) callconv(.c) void;
pub const PFN_internalFreeNotification = PFN_vkInternalFreeNotification;
const PFN_vkReallocationFunction = ?*const fn (?*anyopaque, ?*anyopaque, usize, usize, SystemAllocationScope) callconv(.c) ?*anyopaque;
pub const PFN_reallocationFunction = PFN_vkReallocationFunction;
const PFN_vkVoidFunction = ?*const fn () callconv(.c) void;
pub const PFN_voidFunction = PFN_vkVoidFunction;
const PFN_vkCreateInstance = ?*const fn ([*c]const InstanceCreateInfo, [*c]const AllocationCallbacks, [*c]Instance) callconv(.c) Result;
pub const PFN_createInstance = PFN_vkCreateInstance;
const PFN_vkDestroyInstance = ?*const fn (Instance, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyInstance = PFN_vkDestroyInstance;
const PFN_vkEnumeratePhysicalDevices = ?*const fn (Instance, [*c]u32, [*c]PhysicalDevice) callconv(.c) Result;
pub const PFN_enumeratePhysicalDevices = PFN_vkEnumeratePhysicalDevices;
const PFN_vkGetPhysicalDeviceFeatures = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceFeatures) callconv(.c) void;
pub const PFN_getPhysicalDeviceFeatures = PFN_vkGetPhysicalDeviceFeatures;
const PFN_vkGetPhysicalDeviceFormatProperties = ?*const fn (PhysicalDevice, Format, [*c]FormatProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceFormatProperties = PFN_vkGetPhysicalDeviceFormatProperties;
const PFN_vkGetPhysicalDeviceImageFormatProperties = ?*const fn (PhysicalDevice, Format, ImageType, ImageTiling, ImageUsageFlags, ImageCreateFlags, [*c]ImageFormatProperties) callconv(.c) Result;
pub const PFN_getPhysicalDeviceImageFormatProperties = PFN_vkGetPhysicalDeviceImageFormatProperties;
const PFN_vkGetPhysicalDeviceProperties = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceProperties = PFN_vkGetPhysicalDeviceProperties;
const PFN_vkGetPhysicalDeviceQueueFamilyProperties = ?*const fn (PhysicalDevice, [*c]u32, [*c]QueueFamilyProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceQueueFamilyProperties = PFN_vkGetPhysicalDeviceQueueFamilyProperties;
const PFN_vkGetPhysicalDeviceMemoryProperties = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceMemoryProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceMemoryProperties = PFN_vkGetPhysicalDeviceMemoryProperties;
const PFN_vkGetInstanceProcAddr = ?*const fn (Instance, [*c]const u8) callconv(.c) PFN_vkVoidFunction;
pub const PFN_getInstanceProcAddr = PFN_vkGetInstanceProcAddr;
const PFN_vkGetDeviceProcAddr = ?*const fn (Device, [*c]const u8) callconv(.c) PFN_vkVoidFunction;
pub const PFN_getDeviceProcAddr = PFN_vkGetDeviceProcAddr;
const PFN_vkCreateDevice = ?*const fn (PhysicalDevice, [*c]const DeviceCreateInfo, [*c]const AllocationCallbacks, [*c]Device) callconv(.c) Result;
pub const PFN_createDevice = PFN_vkCreateDevice;
const PFN_vkDestroyDevice = ?*const fn (Device, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDevice = PFN_vkDestroyDevice;
const PFN_vkEnumerateInstanceExtensionProperties = ?*const fn ([*c]const u8, [*c]u32, [*c]ExtensionProperties) callconv(.c) Result;
pub const PFN_enumerateInstanceExtensionProperties = PFN_vkEnumerateInstanceExtensionProperties;
const PFN_vkEnumerateDeviceExtensionProperties = ?*const fn (PhysicalDevice, [*c]const u8, [*c]u32, [*c]ExtensionProperties) callconv(.c) Result;
pub const PFN_enumerateDeviceExtensionProperties = PFN_vkEnumerateDeviceExtensionProperties;
const PFN_vkEnumerateInstanceLayerProperties = ?*const fn ([*c]u32, [*c]LayerProperties) callconv(.c) Result;
pub const PFN_enumerateInstanceLayerProperties = PFN_vkEnumerateInstanceLayerProperties;
const PFN_vkEnumerateDeviceLayerProperties = ?*const fn (PhysicalDevice, [*c]u32, [*c]LayerProperties) callconv(.c) Result;
pub const PFN_enumerateDeviceLayerProperties = PFN_vkEnumerateDeviceLayerProperties;
const PFN_vkGetDeviceQueue = ?*const fn (Device, u32, u32, [*c]Queue) callconv(.c) void;
pub const PFN_getDeviceQueue = PFN_vkGetDeviceQueue;
const PFN_vkQueueSubmit = ?*const fn (Queue, u32, [*c]const SubmitInfo, Fence) callconv(.c) Result;
pub const PFN_queueSubmit = PFN_vkQueueSubmit;
const PFN_vkQueueWaitIdle = ?*const fn (Queue) callconv(.c) Result;
pub const PFN_queueWaitIdle = PFN_vkQueueWaitIdle;
const PFN_vkDeviceWaitIdle = ?*const fn (Device) callconv(.c) Result;
pub const PFN_deviceWaitIdle = PFN_vkDeviceWaitIdle;
const PFN_vkAllocateMemory = ?*const fn (Device, [*c]const MemoryAllocateInfo, [*c]const AllocationCallbacks, [*c]DeviceMemory) callconv(.c) Result;
pub const PFN_allocateMemory = PFN_vkAllocateMemory;
const PFN_vkFreeMemory = ?*const fn (Device, DeviceMemory, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_freeMemory = PFN_vkFreeMemory;
const PFN_vkMapMemory = ?*const fn (Device, DeviceMemory, DeviceSize, DeviceSize, MemoryMapFlags, [*c]?*anyopaque) callconv(.c) Result;
pub const PFN_mapMemory = PFN_vkMapMemory;
const PFN_vkUnmapMemory = ?*const fn (Device, DeviceMemory) callconv(.c) void;
pub const PFN_unmapMemory = PFN_vkUnmapMemory;
const PFN_vkFlushMappedMemoryRanges = ?*const fn (Device, u32, [*c]const MappedMemoryRange) callconv(.c) Result;
pub const PFN_flushMappedMemoryRanges = PFN_vkFlushMappedMemoryRanges;
const PFN_vkInvalidateMappedMemoryRanges = ?*const fn (Device, u32, [*c]const MappedMemoryRange) callconv(.c) Result;
pub const PFN_invalidateMappedMemoryRanges = PFN_vkInvalidateMappedMemoryRanges;
const PFN_vkGetDeviceMemoryCommitment = ?*const fn (Device, DeviceMemory, [*c]DeviceSize) callconv(.c) void;
pub const PFN_getDeviceMemoryCommitment = PFN_vkGetDeviceMemoryCommitment;
const PFN_vkBindBufferMemory = ?*const fn (Device, Buffer, DeviceMemory, DeviceSize) callconv(.c) Result;
pub const PFN_bindBufferMemory = PFN_vkBindBufferMemory;
const PFN_vkBindImageMemory = ?*const fn (Device, Image, DeviceMemory, DeviceSize) callconv(.c) Result;
pub const PFN_bindImageMemory = PFN_vkBindImageMemory;
const PFN_vkGetBufferMemoryRequirements = ?*const fn (Device, Buffer, [*c]MemoryRequirements) callconv(.c) void;
pub const PFN_getBufferMemoryRequirements = PFN_vkGetBufferMemoryRequirements;
const PFN_vkGetImageMemoryRequirements = ?*const fn (Device, Image, [*c]MemoryRequirements) callconv(.c) void;
pub const PFN_getImageMemoryRequirements = PFN_vkGetImageMemoryRequirements;
const PFN_vkGetImageSparseMemoryRequirements = ?*const fn (Device, Image, [*c]u32, [*c]SparseImageMemoryRequirements) callconv(.c) void;
pub const PFN_getImageSparseMemoryRequirements = PFN_vkGetImageSparseMemoryRequirements;
const PFN_vkGetPhysicalDeviceSparseImageFormatProperties = ?*const fn (PhysicalDevice, Format, ImageType, SampleCountFlagBits, ImageUsageFlags, ImageTiling, [*c]u32, [*c]SparseImageFormatProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceSparseImageFormatProperties = PFN_vkGetPhysicalDeviceSparseImageFormatProperties;
const PFN_vkQueueBindSparse = ?*const fn (Queue, u32, [*c]const BindSparseInfo, Fence) callconv(.c) Result;
pub const PFN_queueBindSparse = PFN_vkQueueBindSparse;
const PFN_vkCreateFence = ?*const fn (Device, [*c]const FenceCreateInfo, [*c]const AllocationCallbacks, [*c]Fence) callconv(.c) Result;
pub const PFN_createFence = PFN_vkCreateFence;
const PFN_vkDestroyFence = ?*const fn (Device, Fence, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyFence = PFN_vkDestroyFence;
const PFN_vkResetFences = ?*const fn (Device, u32, [*c]const Fence) callconv(.c) Result;
pub const PFN_resetFences = PFN_vkResetFences;
const PFN_vkGetFenceStatus = ?*const fn (Device, Fence) callconv(.c) Result;
pub const PFN_getFenceStatus = PFN_vkGetFenceStatus;
const PFN_vkWaitForFences = ?*const fn (Device, u32, [*c]const Fence, Bool32, u64) callconv(.c) Result;
pub const PFN_waitForFences = PFN_vkWaitForFences;
const PFN_vkCreateSemaphore = ?*const fn (Device, [*c]const SemaphoreCreateInfo, [*c]const AllocationCallbacks, [*c]Semaphore) callconv(.c) Result;
pub const PFN_createSemaphore = PFN_vkCreateSemaphore;
const PFN_vkDestroySemaphore = ?*const fn (Device, Semaphore, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroySemaphore = PFN_vkDestroySemaphore;
const PFN_vkCreateEvent = ?*const fn (Device, [*c]const EventCreateInfo, [*c]const AllocationCallbacks, [*c]Event) callconv(.c) Result;
pub const PFN_createEvent = PFN_vkCreateEvent;
const PFN_vkDestroyEvent = ?*const fn (Device, Event, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyEvent = PFN_vkDestroyEvent;
const PFN_vkGetEventStatus = ?*const fn (Device, Event) callconv(.c) Result;
pub const PFN_getEventStatus = PFN_vkGetEventStatus;
const PFN_vkSetEvent = ?*const fn (Device, Event) callconv(.c) Result;
pub const PFN_setEvent = PFN_vkSetEvent;
const PFN_vkResetEvent = ?*const fn (Device, Event) callconv(.c) Result;
pub const PFN_resetEvent = PFN_vkResetEvent;
const PFN_vkCreateQueryPool = ?*const fn (Device, [*c]const QueryPoolCreateInfo, [*c]const AllocationCallbacks, [*c]QueryPool) callconv(.c) Result;
pub const PFN_createQueryPool = PFN_vkCreateQueryPool;
const PFN_vkDestroyQueryPool = ?*const fn (Device, QueryPool, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyQueryPool = PFN_vkDestroyQueryPool;
const PFN_vkGetQueryPoolResults = ?*const fn (Device, QueryPool, u32, u32, usize, ?*anyopaque, DeviceSize, QueryResultFlags) callconv(.c) Result;
pub const PFN_getQueryPoolResults = PFN_vkGetQueryPoolResults;
const PFN_vkCreateBuffer = ?*const fn (Device, [*c]const BufferCreateInfo, [*c]const AllocationCallbacks, [*c]Buffer) callconv(.c) Result;
pub const PFN_createBuffer = PFN_vkCreateBuffer;
const PFN_vkDestroyBuffer = ?*const fn (Device, Buffer, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyBuffer = PFN_vkDestroyBuffer;
const PFN_vkCreateBufferView = ?*const fn (Device, [*c]const BufferViewCreateInfo, [*c]const AllocationCallbacks, [*c]BufferView) callconv(.c) Result;
pub const PFN_createBufferView = PFN_vkCreateBufferView;
const PFN_vkDestroyBufferView = ?*const fn (Device, BufferView, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyBufferView = PFN_vkDestroyBufferView;
const PFN_vkCreateImage = ?*const fn (Device, [*c]const ImageCreateInfo, [*c]const AllocationCallbacks, [*c]Image) callconv(.c) Result;
pub const PFN_createImage = PFN_vkCreateImage;
const PFN_vkDestroyImage = ?*const fn (Device, Image, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyImage = PFN_vkDestroyImage;
const PFN_vkGetImageSubresourceLayout = ?*const fn (Device, Image, [*c]const ImageSubresource, [*c]SubresourceLayout) callconv(.c) void;
pub const PFN_getImageSubresourceLayout = PFN_vkGetImageSubresourceLayout;
const PFN_vkCreateImageView = ?*const fn (Device, [*c]const ImageViewCreateInfo, [*c]const AllocationCallbacks, [*c]ImageView) callconv(.c) Result;
pub const PFN_createImageView = PFN_vkCreateImageView;
const PFN_vkDestroyImageView = ?*const fn (Device, ImageView, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyImageView = PFN_vkDestroyImageView;
const PFN_vkCreateShaderModule = ?*const fn (Device, [*c]const ShaderModuleCreateInfo, [*c]const AllocationCallbacks, [*c]ShaderModule) callconv(.c) Result;
pub const PFN_createShaderModule = PFN_vkCreateShaderModule;
const PFN_vkDestroyShaderModule = ?*const fn (Device, ShaderModule, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyShaderModule = PFN_vkDestroyShaderModule;
const PFN_vkCreatePipelineCache = ?*const fn (Device, [*c]const PipelineCacheCreateInfo, [*c]const AllocationCallbacks, [*c]PipelineCache) callconv(.c) Result;
pub const PFN_createPipelineCache = PFN_vkCreatePipelineCache;
const PFN_vkDestroyPipelineCache = ?*const fn (Device, PipelineCache, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyPipelineCache = PFN_vkDestroyPipelineCache;
const PFN_vkGetPipelineCacheData = ?*const fn (Device, PipelineCache, [*c]usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getPipelineCacheData = PFN_vkGetPipelineCacheData;
const PFN_vkMergePipelineCaches = ?*const fn (Device, PipelineCache, u32, [*c]const PipelineCache) callconv(.c) Result;
pub const PFN_mergePipelineCaches = PFN_vkMergePipelineCaches;
const PFN_vkCreateGraphicsPipelines = ?*const fn (Device, PipelineCache, u32, [*c]const GraphicsPipelineCreateInfo, [*c]const AllocationCallbacks, [*c]Pipeline) callconv(.c) Result;
pub const PFN_createGraphicsPipelines = PFN_vkCreateGraphicsPipelines;
const PFN_vkCreateComputePipelines = ?*const fn (Device, PipelineCache, u32, [*c]const ComputePipelineCreateInfo, [*c]const AllocationCallbacks, [*c]Pipeline) callconv(.c) Result;
pub const PFN_createComputePipelines = PFN_vkCreateComputePipelines;
const PFN_vkDestroyPipeline = ?*const fn (Device, Pipeline, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyPipeline = PFN_vkDestroyPipeline;
const PFN_vkCreatePipelineLayout = ?*const fn (Device, [*c]const PipelineLayoutCreateInfo, [*c]const AllocationCallbacks, [*c]PipelineLayout) callconv(.c) Result;
pub const PFN_createPipelineLayout = PFN_vkCreatePipelineLayout;
const PFN_vkDestroyPipelineLayout = ?*const fn (Device, PipelineLayout, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyPipelineLayout = PFN_vkDestroyPipelineLayout;
const PFN_vkCreateSampler = ?*const fn (Device, [*c]const SamplerCreateInfo, [*c]const AllocationCallbacks, [*c]Sampler) callconv(.c) Result;
pub const PFN_createSampler = PFN_vkCreateSampler;
const PFN_vkDestroySampler = ?*const fn (Device, Sampler, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroySampler = PFN_vkDestroySampler;
const PFN_vkCreateDescriptorSetLayout = ?*const fn (Device, [*c]const DescriptorSetLayoutCreateInfo, [*c]const AllocationCallbacks, [*c]DescriptorSetLayout) callconv(.c) Result;
pub const PFN_createDescriptorSetLayout = PFN_vkCreateDescriptorSetLayout;
const PFN_vkDestroyDescriptorSetLayout = ?*const fn (Device, DescriptorSetLayout, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDescriptorSetLayout = PFN_vkDestroyDescriptorSetLayout;
const PFN_vkCreateDescriptorPool = ?*const fn (Device, [*c]const DescriptorPoolCreateInfo, [*c]const AllocationCallbacks, [*c]DescriptorPool) callconv(.c) Result;
pub const PFN_createDescriptorPool = PFN_vkCreateDescriptorPool;
const PFN_vkDestroyDescriptorPool = ?*const fn (Device, DescriptorPool, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDescriptorPool = PFN_vkDestroyDescriptorPool;
const PFN_vkResetDescriptorPool = ?*const fn (Device, DescriptorPool, DescriptorPoolResetFlags) callconv(.c) Result;
pub const PFN_resetDescriptorPool = PFN_vkResetDescriptorPool;
const PFN_vkAllocateDescriptorSets = ?*const fn (Device, [*c]const DescriptorSetAllocateInfo, [*c]DescriptorSet) callconv(.c) Result;
pub const PFN_allocateDescriptorSets = PFN_vkAllocateDescriptorSets;
const PFN_vkFreeDescriptorSets = ?*const fn (Device, DescriptorPool, u32, [*c]const DescriptorSet) callconv(.c) Result;
pub const PFN_freeDescriptorSets = PFN_vkFreeDescriptorSets;
const PFN_vkUpdateDescriptorSets = ?*const fn (Device, u32, [*c]const WriteDescriptorSet, u32, [*c]const CopyDescriptorSet) callconv(.c) void;
pub const PFN_updateDescriptorSets = PFN_vkUpdateDescriptorSets;
const PFN_vkCreateFramebuffer = ?*const fn (Device, [*c]const FramebufferCreateInfo, [*c]const AllocationCallbacks, [*c]Framebuffer) callconv(.c) Result;
pub const PFN_createFramebuffer = PFN_vkCreateFramebuffer;
const PFN_vkDestroyFramebuffer = ?*const fn (Device, Framebuffer, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyFramebuffer = PFN_vkDestroyFramebuffer;
const PFN_vkCreateRenderPass = ?*const fn (Device, [*c]const RenderPassCreateInfo, [*c]const AllocationCallbacks, [*c]RenderPass) callconv(.c) Result;
pub const PFN_createRenderPass = PFN_vkCreateRenderPass;
const PFN_vkDestroyRenderPass = ?*const fn (Device, RenderPass, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyRenderPass = PFN_vkDestroyRenderPass;
const PFN_vkGetRenderAreaGranularity = ?*const fn (Device, RenderPass, [*c]Extent2D) callconv(.c) void;
pub const PFN_getRenderAreaGranularity = PFN_vkGetRenderAreaGranularity;
const PFN_vkCreateCommandPool = ?*const fn (Device, [*c]const CommandPoolCreateInfo, [*c]const AllocationCallbacks, [*c]CommandPool) callconv(.c) Result;
pub const PFN_createCommandPool = PFN_vkCreateCommandPool;
const PFN_vkDestroyCommandPool = ?*const fn (Device, CommandPool, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyCommandPool = PFN_vkDestroyCommandPool;
const PFN_vkResetCommandPool = ?*const fn (Device, CommandPool, CommandPoolResetFlags) callconv(.c) Result;
pub const PFN_resetCommandPool = PFN_vkResetCommandPool;
const PFN_vkAllocateCommandBuffers = ?*const fn (Device, [*c]const CommandBufferAllocateInfo, [*c]CommandBuffer) callconv(.c) Result;
pub const PFN_allocateCommandBuffers = PFN_vkAllocateCommandBuffers;
const PFN_vkFreeCommandBuffers = ?*const fn (Device, CommandPool, u32, [*c]const CommandBuffer) callconv(.c) void;
pub const PFN_freeCommandBuffers = PFN_vkFreeCommandBuffers;
const PFN_vkBeginCommandBuffer = ?*const fn (CommandBuffer, [*c]const CommandBufferBeginInfo) callconv(.c) Result;
pub const PFN_beginCommandBuffer = PFN_vkBeginCommandBuffer;
const PFN_vkEndCommandBuffer = ?*const fn (CommandBuffer) callconv(.c) Result;
pub const PFN_endCommandBuffer = PFN_vkEndCommandBuffer;
const PFN_vkResetCommandBuffer = ?*const fn (CommandBuffer, CommandBufferResetFlags) callconv(.c) Result;
pub const PFN_resetCommandBuffer = PFN_vkResetCommandBuffer;
const PFN_vkCmdBindPipeline = ?*const fn (CommandBuffer, PipelineBindPoint, Pipeline) callconv(.c) void;
pub const PFN_cmdBindPipeline = PFN_vkCmdBindPipeline;
const PFN_vkCmdSetViewport = ?*const fn (CommandBuffer, u32, u32, [*c]const Viewport) callconv(.c) void;
pub const PFN_cmdSetViewport = PFN_vkCmdSetViewport;
const PFN_vkCmdSetScissor = ?*const fn (CommandBuffer, u32, u32, [*c]const Rect2D) callconv(.c) void;
pub const PFN_cmdSetScissor = PFN_vkCmdSetScissor;
const PFN_vkCmdSetLineWidth = ?*const fn (CommandBuffer, f32) callconv(.c) void;
pub const PFN_cmdSetLineWidth = PFN_vkCmdSetLineWidth;
const PFN_vkCmdSetDepthBias = ?*const fn (CommandBuffer, f32, f32, f32) callconv(.c) void;
pub const PFN_cmdSetDepthBias = PFN_vkCmdSetDepthBias;
const PFN_vkCmdSetBlendConstants = ?*const fn (CommandBuffer, [*c]const f32) callconv(.c) void;
pub const PFN_cmdSetBlendConstants = PFN_vkCmdSetBlendConstants;
const PFN_vkCmdSetDepthBounds = ?*const fn (CommandBuffer, f32, f32) callconv(.c) void;
pub const PFN_cmdSetDepthBounds = PFN_vkCmdSetDepthBounds;
const PFN_vkCmdSetStencilCompareMask = ?*const fn (CommandBuffer, StencilFaceFlags, u32) callconv(.c) void;
pub const PFN_cmdSetStencilCompareMask = PFN_vkCmdSetStencilCompareMask;
const PFN_vkCmdSetStencilWriteMask = ?*const fn (CommandBuffer, StencilFaceFlags, u32) callconv(.c) void;
pub const PFN_cmdSetStencilWriteMask = PFN_vkCmdSetStencilWriteMask;
const PFN_vkCmdSetStencilReference = ?*const fn (CommandBuffer, StencilFaceFlags, u32) callconv(.c) void;
pub const PFN_cmdSetStencilReference = PFN_vkCmdSetStencilReference;
const PFN_vkCmdBindDescriptorSets = ?*const fn (CommandBuffer, PipelineBindPoint, PipelineLayout, u32, u32, [*c]const DescriptorSet, u32, [*c]const u32) callconv(.c) void;
pub const PFN_cmdBindDescriptorSets = PFN_vkCmdBindDescriptorSets;
const PFN_vkCmdBindIndexBuffer = ?*const fn (CommandBuffer, Buffer, DeviceSize, IndexType) callconv(.c) void;
pub const PFN_cmdBindIndexBuffer = PFN_vkCmdBindIndexBuffer;
const PFN_vkCmdBindVertexBuffers = ?*const fn (CommandBuffer, u32, u32, [*c]const Buffer, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdBindVertexBuffers = PFN_vkCmdBindVertexBuffers;
const PFN_vkCmdDraw = ?*const fn (CommandBuffer, u32, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDraw = PFN_vkCmdDraw;
const PFN_vkCmdDrawIndexed = ?*const fn (CommandBuffer, u32, u32, u32, i32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndexed = PFN_vkCmdDrawIndexed;
const PFN_vkCmdDrawIndirect = ?*const fn (CommandBuffer, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndirect = PFN_vkCmdDrawIndirect;
const PFN_vkCmdDrawIndexedIndirect = ?*const fn (CommandBuffer, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndexedIndirect = PFN_vkCmdDrawIndexedIndirect;
const PFN_vkCmdDispatch = ?*const fn (CommandBuffer, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDispatch = PFN_vkCmdDispatch;
const PFN_vkCmdDispatchIndirect = ?*const fn (CommandBuffer, Buffer, DeviceSize) callconv(.c) void;
pub const PFN_cmdDispatchIndirect = PFN_vkCmdDispatchIndirect;
const PFN_vkCmdCopyBuffer = ?*const fn (CommandBuffer, Buffer, Buffer, u32, [*c]const BufferCopy) callconv(.c) void;
pub const PFN_cmdCopyBuffer = PFN_vkCmdCopyBuffer;
const PFN_vkCmdCopyImage = ?*const fn (CommandBuffer, Image, ImageLayout, Image, ImageLayout, u32, [*c]const ImageCopy) callconv(.c) void;
pub const PFN_cmdCopyImage = PFN_vkCmdCopyImage;
const PFN_vkCmdBlitImage = ?*const fn (CommandBuffer, Image, ImageLayout, Image, ImageLayout, u32, [*c]const ImageBlit, Filter) callconv(.c) void;
pub const PFN_cmdBlitImage = PFN_vkCmdBlitImage;
const PFN_vkCmdCopyBufferToImage = ?*const fn (CommandBuffer, Buffer, Image, ImageLayout, u32, [*c]const BufferImageCopy) callconv(.c) void;
pub const PFN_cmdCopyBufferToImage = PFN_vkCmdCopyBufferToImage;
const PFN_vkCmdCopyImageToBuffer = ?*const fn (CommandBuffer, Image, ImageLayout, Buffer, u32, [*c]const BufferImageCopy) callconv(.c) void;
pub const PFN_cmdCopyImageToBuffer = PFN_vkCmdCopyImageToBuffer;
const PFN_vkCmdUpdateBuffer = ?*const fn (CommandBuffer, Buffer, DeviceSize, DeviceSize, ?*const anyopaque) callconv(.c) void;
pub const PFN_cmdUpdateBuffer = PFN_vkCmdUpdateBuffer;
const PFN_vkCmdFillBuffer = ?*const fn (CommandBuffer, Buffer, DeviceSize, DeviceSize, u32) callconv(.c) void;
pub const PFN_cmdFillBuffer = PFN_vkCmdFillBuffer;
const PFN_vkCmdClearColorImage = ?*const fn (CommandBuffer, Image, ImageLayout, [*c]const ClearColorValue, u32, [*c]const ImageSubresourceRange) callconv(.c) void;
pub const PFN_cmdClearColorImage = PFN_vkCmdClearColorImage;
const PFN_vkCmdClearDepthStencilImage = ?*const fn (CommandBuffer, Image, ImageLayout, [*c]const ClearDepthStencilValue, u32, [*c]const ImageSubresourceRange) callconv(.c) void;
pub const PFN_cmdClearDepthStencilImage = PFN_vkCmdClearDepthStencilImage;
const PFN_vkCmdClearAttachments = ?*const fn (CommandBuffer, u32, [*c]const ClearAttachment, u32, [*c]const ClearRect) callconv(.c) void;
pub const PFN_cmdClearAttachments = PFN_vkCmdClearAttachments;
const PFN_vkCmdResolveImage = ?*const fn (CommandBuffer, Image, ImageLayout, Image, ImageLayout, u32, [*c]const ImageResolve) callconv(.c) void;
pub const PFN_cmdResolveImage = PFN_vkCmdResolveImage;
const PFN_vkCmdSetEvent = ?*const fn (CommandBuffer, Event, PipelineStageFlags) callconv(.c) void;
pub const PFN_cmdSetEvent = PFN_vkCmdSetEvent;
const PFN_vkCmdResetEvent = ?*const fn (CommandBuffer, Event, PipelineStageFlags) callconv(.c) void;
pub const PFN_cmdResetEvent = PFN_vkCmdResetEvent;
const PFN_vkCmdWaitEvents = ?*const fn (CommandBuffer, u32, [*c]const Event, PipelineStageFlags, PipelineStageFlags, u32, [*c]const MemoryBarrier, u32, [*c]const BufferMemoryBarrier, u32, [*c]const ImageMemoryBarrier) callconv(.c) void;
pub const PFN_cmdWaitEvents = PFN_vkCmdWaitEvents;
const PFN_vkCmdPipelineBarrier = ?*const fn (CommandBuffer, PipelineStageFlags, PipelineStageFlags, DependencyFlags, u32, [*c]const MemoryBarrier, u32, [*c]const BufferMemoryBarrier, u32, [*c]const ImageMemoryBarrier) callconv(.c) void;
pub const PFN_cmdPipelineBarrier = PFN_vkCmdPipelineBarrier;
const PFN_vkCmdBeginQuery = ?*const fn (CommandBuffer, QueryPool, u32, QueryControlFlags) callconv(.c) void;
pub const PFN_cmdBeginQuery = PFN_vkCmdBeginQuery;
const PFN_vkCmdEndQuery = ?*const fn (CommandBuffer, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdEndQuery = PFN_vkCmdEndQuery;
const PFN_vkCmdResetQueryPool = ?*const fn (CommandBuffer, QueryPool, u32, u32) callconv(.c) void;
pub const PFN_cmdResetQueryPool = PFN_vkCmdResetQueryPool;
const PFN_vkCmdWriteTimestamp = ?*const fn (CommandBuffer, PipelineStageFlagBits, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdWriteTimestamp = PFN_vkCmdWriteTimestamp;
const PFN_vkCmdCopyQueryPoolResults = ?*const fn (CommandBuffer, QueryPool, u32, u32, Buffer, DeviceSize, DeviceSize, QueryResultFlags) callconv(.c) void;
pub const PFN_cmdCopyQueryPoolResults = PFN_vkCmdCopyQueryPoolResults;
const PFN_vkCmdPushConstants = ?*const fn (CommandBuffer, PipelineLayout, ShaderStageFlags, u32, u32, ?*const anyopaque) callconv(.c) void;
pub const PFN_cmdPushConstants = PFN_vkCmdPushConstants;
const PFN_vkCmdBeginRenderPass = ?*const fn (CommandBuffer, [*c]const RenderPassBeginInfo, SubpassContents) callconv(.c) void;
pub const PFN_cmdBeginRenderPass = PFN_vkCmdBeginRenderPass;
const PFN_vkCmdNextSubpass = ?*const fn (CommandBuffer, SubpassContents) callconv(.c) void;
pub const PFN_cmdNextSubpass = PFN_vkCmdNextSubpass;
const PFN_vkCmdEndRenderPass = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdEndRenderPass = PFN_vkCmdEndRenderPass;
const PFN_vkCmdExecuteCommands = ?*const fn (CommandBuffer, u32, [*c]const CommandBuffer) callconv(.c) void;
pub const PFN_cmdExecuteCommands = PFN_vkCmdExecuteCommands;
const PFN_vkEnumerateInstanceVersion = ?*const fn ([*c]u32) callconv(.c) Result;
pub const PFN_enumerateInstanceVersion = PFN_vkEnumerateInstanceVersion;
const PFN_vkBindBufferMemory2 = ?*const fn (Device, u32, [*c]const BindBufferMemoryInfo) callconv(.c) Result;
pub const PFN_bindBufferMemory2 = PFN_vkBindBufferMemory2;
const PFN_vkBindImageMemory2 = ?*const fn (Device, u32, [*c]const BindImageMemoryInfo) callconv(.c) Result;
pub const PFN_bindImageMemory2 = PFN_vkBindImageMemory2;
const PFN_vkGetDeviceGroupPeerMemoryFeatures = ?*const fn (Device, u32, u32, u32, [*c]PeerMemoryFeatureFlags) callconv(.c) void;
pub const PFN_getDeviceGroupPeerMemoryFeatures = PFN_vkGetDeviceGroupPeerMemoryFeatures;
const PFN_vkCmdSetDeviceMask = ?*const fn (CommandBuffer, u32) callconv(.c) void;
pub const PFN_cmdSetDeviceMask = PFN_vkCmdSetDeviceMask;
const PFN_vkCmdDispatchBase = ?*const fn (CommandBuffer, u32, u32, u32, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDispatchBase = PFN_vkCmdDispatchBase;
const PFN_vkEnumeratePhysicalDeviceGroups = ?*const fn (Instance, [*c]u32, [*c]PhysicalDeviceGroupProperties) callconv(.c) Result;
pub const PFN_enumeratePhysicalDeviceGroups = PFN_vkEnumeratePhysicalDeviceGroups;
const PFN_vkGetImageMemoryRequirements2 = ?*const fn (Device, [*c]const ImageMemoryRequirementsInfo2, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getImageMemoryRequirements2 = PFN_vkGetImageMemoryRequirements2;
const PFN_vkGetBufferMemoryRequirements2 = ?*const fn (Device, [*c]const BufferMemoryRequirementsInfo2, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getBufferMemoryRequirements2 = PFN_vkGetBufferMemoryRequirements2;
const PFN_vkGetImageSparseMemoryRequirements2 = ?*const fn (Device, [*c]const ImageSparseMemoryRequirementsInfo2, [*c]u32, [*c]SparseImageMemoryRequirements2) callconv(.c) void;
pub const PFN_getImageSparseMemoryRequirements2 = PFN_vkGetImageSparseMemoryRequirements2;
const PFN_vkGetPhysicalDeviceFeatures2 = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceFeatures2) callconv(.c) void;
pub const PFN_getPhysicalDeviceFeatures2 = PFN_vkGetPhysicalDeviceFeatures2;
const PFN_vkGetPhysicalDeviceProperties2 = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceProperties2 = PFN_vkGetPhysicalDeviceProperties2;
const PFN_vkGetPhysicalDeviceFormatProperties2 = ?*const fn (PhysicalDevice, Format, [*c]FormatProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceFormatProperties2 = PFN_vkGetPhysicalDeviceFormatProperties2;
const PFN_vkGetPhysicalDeviceImageFormatProperties2 = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceImageFormatInfo2, [*c]ImageFormatProperties2) callconv(.c) Result;
pub const PFN_getPhysicalDeviceImageFormatProperties2 = PFN_vkGetPhysicalDeviceImageFormatProperties2;
const PFN_vkGetPhysicalDeviceQueueFamilyProperties2 = ?*const fn (PhysicalDevice, [*c]u32, [*c]QueueFamilyProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceQueueFamilyProperties2 = PFN_vkGetPhysicalDeviceQueueFamilyProperties2;
const PFN_vkGetPhysicalDeviceMemoryProperties2 = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceMemoryProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceMemoryProperties2 = PFN_vkGetPhysicalDeviceMemoryProperties2;
const PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceSparseImageFormatInfo2, [*c]u32, [*c]SparseImageFormatProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceSparseImageFormatProperties2 = PFN_vkGetPhysicalDeviceSparseImageFormatProperties2;
const PFN_vkTrimCommandPool = ?*const fn (Device, CommandPool, CommandPoolTrimFlags) callconv(.c) void;
pub const PFN_trimCommandPool = PFN_vkTrimCommandPool;
const PFN_vkGetDeviceQueue2 = ?*const fn (Device, [*c]const DeviceQueueInfo2, [*c]Queue) callconv(.c) void;
pub const PFN_getDeviceQueue2 = PFN_vkGetDeviceQueue2;
const PFN_vkCreateSamplerYcbcrConversion = ?*const fn (Device, [*c]const SamplerYcbcrConversionCreateInfo, [*c]const AllocationCallbacks, [*c]SamplerYcbcrConversion) callconv(.c) Result;
pub const PFN_createSamplerYcbcrConversion = PFN_vkCreateSamplerYcbcrConversion;
const PFN_vkDestroySamplerYcbcrConversion = ?*const fn (Device, SamplerYcbcrConversion, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroySamplerYcbcrConversion = PFN_vkDestroySamplerYcbcrConversion;
const PFN_vkCreateDescriptorUpdateTemplate = ?*const fn (Device, [*c]const DescriptorUpdateTemplateCreateInfo, [*c]const AllocationCallbacks, [*c]DescriptorUpdateTemplate) callconv(.c) Result;
pub const PFN_createDescriptorUpdateTemplate = PFN_vkCreateDescriptorUpdateTemplate;
const PFN_vkDestroyDescriptorUpdateTemplate = ?*const fn (Device, DescriptorUpdateTemplate, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDescriptorUpdateTemplate = PFN_vkDestroyDescriptorUpdateTemplate;
const PFN_vkUpdateDescriptorSetWithTemplate = ?*const fn (Device, DescriptorSet, DescriptorUpdateTemplate, ?*const anyopaque) callconv(.c) void;
pub const PFN_updateDescriptorSetWithTemplate = PFN_vkUpdateDescriptorSetWithTemplate;
const PFN_vkGetPhysicalDeviceExternalBufferProperties = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalBufferInfo, [*c]ExternalBufferProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalBufferProperties = PFN_vkGetPhysicalDeviceExternalBufferProperties;
const PFN_vkGetPhysicalDeviceExternalFenceProperties = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalFenceInfo, [*c]ExternalFenceProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalFenceProperties = PFN_vkGetPhysicalDeviceExternalFenceProperties;
const PFN_vkGetPhysicalDeviceExternalSemaphoreProperties = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalSemaphoreInfo, [*c]ExternalSemaphoreProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalSemaphoreProperties = PFN_vkGetPhysicalDeviceExternalSemaphoreProperties;
const PFN_vkGetDescriptorSetLayoutSupport = ?*const fn (Device, [*c]const DescriptorSetLayoutCreateInfo, [*c]DescriptorSetLayoutSupport) callconv(.c) void;
pub const PFN_getDescriptorSetLayoutSupport = PFN_vkGetDescriptorSetLayoutSupport;
const PFN_vkCmdDrawIndirectCount = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndirectCount = PFN_vkCmdDrawIndirectCount;
const PFN_vkCmdDrawIndexedIndirectCount = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndexedIndirectCount = PFN_vkCmdDrawIndexedIndirectCount;
const PFN_vkCreateRenderPass2 = ?*const fn (Device, [*c]const RenderPassCreateInfo2, [*c]const AllocationCallbacks, [*c]RenderPass) callconv(.c) Result;
pub const PFN_createRenderPass2 = PFN_vkCreateRenderPass2;
const PFN_vkCmdBeginRenderPass2 = ?*const fn (CommandBuffer, [*c]const RenderPassBeginInfo, [*c]const SubpassBeginInfo) callconv(.c) void;
pub const PFN_cmdBeginRenderPass2 = PFN_vkCmdBeginRenderPass2;
const PFN_vkCmdNextSubpass2 = ?*const fn (CommandBuffer, [*c]const SubpassBeginInfo, [*c]const SubpassEndInfo) callconv(.c) void;
pub const PFN_cmdNextSubpass2 = PFN_vkCmdNextSubpass2;
const PFN_vkCmdEndRenderPass2 = ?*const fn (CommandBuffer, [*c]const SubpassEndInfo) callconv(.c) void;
pub const PFN_cmdEndRenderPass2 = PFN_vkCmdEndRenderPass2;
const PFN_vkResetQueryPool = ?*const fn (Device, QueryPool, u32, u32) callconv(.c) void;
pub const PFN_resetQueryPool = PFN_vkResetQueryPool;
const PFN_vkGetSemaphoreCounterValue = ?*const fn (Device, Semaphore, [*c]u64) callconv(.c) Result;
pub const PFN_getSemaphoreCounterValue = PFN_vkGetSemaphoreCounterValue;
const PFN_vkWaitSemaphores = ?*const fn (Device, [*c]const SemaphoreWaitInfo, u64) callconv(.c) Result;
pub const PFN_waitSemaphores = PFN_vkWaitSemaphores;
const PFN_vkSignalSemaphore = ?*const fn (Device, [*c]const SemaphoreSignalInfo) callconv(.c) Result;
pub const PFN_signalSemaphore = PFN_vkSignalSemaphore;
const PFN_vkGetBufferDeviceAddress = ?*const fn (Device, [*c]const BufferDeviceAddressInfo) callconv(.c) DeviceAddress;
pub const PFN_getBufferDeviceAddress = PFN_vkGetBufferDeviceAddress;
const PFN_vkGetBufferOpaqueCaptureAddress = ?*const fn (Device, [*c]const BufferDeviceAddressInfo) callconv(.c) u64;
pub const PFN_getBufferOpaqueCaptureAddress = PFN_vkGetBufferOpaqueCaptureAddress;
const PFN_vkGetDeviceMemoryOpaqueCaptureAddress = ?*const fn (Device, [*c]const DeviceMemoryOpaqueCaptureAddressInfo) callconv(.c) u64;
pub const PFN_getDeviceMemoryOpaqueCaptureAddress = PFN_vkGetDeviceMemoryOpaqueCaptureAddress;
const PFN_vkGetPhysicalDeviceToolProperties = ?*const fn (PhysicalDevice, [*c]u32, [*c]PhysicalDeviceToolProperties) callconv(.c) Result;
pub const PFN_getPhysicalDeviceToolProperties = PFN_vkGetPhysicalDeviceToolProperties;
const PFN_vkCreatePrivateDataSlot = ?*const fn (Device, [*c]const PrivateDataSlotCreateInfo, [*c]const AllocationCallbacks, [*c]PrivateDataSlot) callconv(.c) Result;
pub const PFN_createPrivateDataSlot = PFN_vkCreatePrivateDataSlot;
const PFN_vkDestroyPrivateDataSlot = ?*const fn (Device, PrivateDataSlot, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyPrivateDataSlot = PFN_vkDestroyPrivateDataSlot;
const PFN_vkSetPrivateData = ?*const fn (Device, ObjectType, u64, PrivateDataSlot, u64) callconv(.c) Result;
pub const PFN_setPrivateData = PFN_vkSetPrivateData;
const PFN_vkGetPrivateData = ?*const fn (Device, ObjectType, u64, PrivateDataSlot, [*c]u64) callconv(.c) void;
pub const PFN_getPrivateData = PFN_vkGetPrivateData;
const PFN_vkCmdSetEvent2 = ?*const fn (CommandBuffer, Event, [*c]const DependencyInfo) callconv(.c) void;
pub const PFN_cmdSetEvent2 = PFN_vkCmdSetEvent2;
const PFN_vkCmdResetEvent2 = ?*const fn (CommandBuffer, Event, PipelineStageFlags2) callconv(.c) void;
pub const PFN_cmdResetEvent2 = PFN_vkCmdResetEvent2;
const PFN_vkCmdWaitEvents2 = ?*const fn (CommandBuffer, u32, [*c]const Event, [*c]const DependencyInfo) callconv(.c) void;
pub const PFN_cmdWaitEvents2 = PFN_vkCmdWaitEvents2;
const PFN_vkCmdPipelineBarrier2 = ?*const fn (CommandBuffer, [*c]const DependencyInfo) callconv(.c) void;
pub const PFN_cmdPipelineBarrier2 = PFN_vkCmdPipelineBarrier2;
const PFN_vkCmdWriteTimestamp2 = ?*const fn (CommandBuffer, PipelineStageFlags2, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdWriteTimestamp2 = PFN_vkCmdWriteTimestamp2;
const PFN_vkQueueSubmit2 = ?*const fn (Queue, u32, [*c]const SubmitInfo2, Fence) callconv(.c) Result;
pub const PFN_queueSubmit2 = PFN_vkQueueSubmit2;
const PFN_vkCmdCopyBuffer2 = ?*const fn (CommandBuffer, [*c]const CopyBufferInfo2) callconv(.c) void;
pub const PFN_cmdCopyBuffer2 = PFN_vkCmdCopyBuffer2;
const PFN_vkCmdCopyImage2 = ?*const fn (CommandBuffer, [*c]const CopyImageInfo2) callconv(.c) void;
pub const PFN_cmdCopyImage2 = PFN_vkCmdCopyImage2;
const PFN_vkCmdCopyBufferToImage2 = ?*const fn (CommandBuffer, [*c]const CopyBufferToImageInfo2) callconv(.c) void;
pub const PFN_cmdCopyBufferToImage2 = PFN_vkCmdCopyBufferToImage2;
const PFN_vkCmdCopyImageToBuffer2 = ?*const fn (CommandBuffer, [*c]const CopyImageToBufferInfo2) callconv(.c) void;
pub const PFN_cmdCopyImageToBuffer2 = PFN_vkCmdCopyImageToBuffer2;
const PFN_vkCmdBlitImage2 = ?*const fn (CommandBuffer, [*c]const BlitImageInfo2) callconv(.c) void;
pub const PFN_cmdBlitImage2 = PFN_vkCmdBlitImage2;
const PFN_vkCmdResolveImage2 = ?*const fn (CommandBuffer, [*c]const ResolveImageInfo2) callconv(.c) void;
pub const PFN_cmdResolveImage2 = PFN_vkCmdResolveImage2;
const PFN_vkCmdBeginRendering = ?*const fn (CommandBuffer, [*c]const RenderingInfo) callconv(.c) void;
pub const PFN_cmdBeginRendering = PFN_vkCmdBeginRendering;
const PFN_vkCmdEndRendering = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdEndRendering = PFN_vkCmdEndRendering;
const PFN_vkCmdSetCullMode = ?*const fn (CommandBuffer, CullModeFlags) callconv(.c) void;
pub const PFN_cmdSetCullMode = PFN_vkCmdSetCullMode;
const PFN_vkCmdSetFrontFace = ?*const fn (CommandBuffer, FrontFace) callconv(.c) void;
pub const PFN_cmdSetFrontFace = PFN_vkCmdSetFrontFace;
const PFN_vkCmdSetPrimitiveTopology = ?*const fn (CommandBuffer, PrimitiveTopology) callconv(.c) void;
pub const PFN_cmdSetPrimitiveTopology = PFN_vkCmdSetPrimitiveTopology;
const PFN_vkCmdSetViewportWithCount = ?*const fn (CommandBuffer, u32, [*c]const Viewport) callconv(.c) void;
pub const PFN_cmdSetViewportWithCount = PFN_vkCmdSetViewportWithCount;
const PFN_vkCmdSetScissorWithCount = ?*const fn (CommandBuffer, u32, [*c]const Rect2D) callconv(.c) void;
pub const PFN_cmdSetScissorWithCount = PFN_vkCmdSetScissorWithCount;
const PFN_vkCmdBindVertexBuffers2 = ?*const fn (CommandBuffer, u32, u32, [*c]const Buffer, [*c]const DeviceSize, [*c]const DeviceSize, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdBindVertexBuffers2 = PFN_vkCmdBindVertexBuffers2;
const PFN_vkCmdSetDepthTestEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthTestEnable = PFN_vkCmdSetDepthTestEnable;
const PFN_vkCmdSetDepthWriteEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthWriteEnable = PFN_vkCmdSetDepthWriteEnable;
const PFN_vkCmdSetDepthCompareOp = ?*const fn (CommandBuffer, CompareOp) callconv(.c) void;
pub const PFN_cmdSetDepthCompareOp = PFN_vkCmdSetDepthCompareOp;
const PFN_vkCmdSetDepthBoundsTestEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthBoundsTestEnable = PFN_vkCmdSetDepthBoundsTestEnable;
const PFN_vkCmdSetStencilTestEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetStencilTestEnable = PFN_vkCmdSetStencilTestEnable;
const PFN_vkCmdSetStencilOp = ?*const fn (CommandBuffer, StencilFaceFlags, StencilOp, StencilOp, StencilOp, CompareOp) callconv(.c) void;
pub const PFN_cmdSetStencilOp = PFN_vkCmdSetStencilOp;
const PFN_vkCmdSetRasterizerDiscardEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetRasterizerDiscardEnable = PFN_vkCmdSetRasterizerDiscardEnable;
const PFN_vkCmdSetDepthBiasEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthBiasEnable = PFN_vkCmdSetDepthBiasEnable;
const PFN_vkCmdSetPrimitiveRestartEnable = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetPrimitiveRestartEnable = PFN_vkCmdSetPrimitiveRestartEnable;
const PFN_vkGetDeviceBufferMemoryRequirements = ?*const fn (Device, [*c]const DeviceBufferMemoryRequirements, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceBufferMemoryRequirements = PFN_vkGetDeviceBufferMemoryRequirements;
const PFN_vkGetDeviceImageMemoryRequirements = ?*const fn (Device, [*c]const DeviceImageMemoryRequirements, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceImageMemoryRequirements = PFN_vkGetDeviceImageMemoryRequirements;
const PFN_vkGetDeviceImageSparseMemoryRequirements = ?*const fn (Device, [*c]const DeviceImageMemoryRequirements, [*c]u32, [*c]SparseImageMemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceImageSparseMemoryRequirements = PFN_vkGetDeviceImageSparseMemoryRequirements;
const PFN_vkCmdSetLineStipple = ?*const fn (CommandBuffer, u32, u16) callconv(.c) void;
pub const PFN_cmdSetLineStipple = PFN_vkCmdSetLineStipple;
const PFN_vkMapMemory2 = ?*const fn (Device, [*c]const MemoryMapInfo, [*c]?*anyopaque) callconv(.c) Result;
pub const PFN_mapMemory2 = PFN_vkMapMemory2;
const PFN_vkUnmapMemory2 = ?*const fn (Device, [*c]const MemoryUnmapInfo) callconv(.c) Result;
pub const PFN_unmapMemory2 = PFN_vkUnmapMemory2;
const PFN_vkCmdBindIndexBuffer2 = ?*const fn (CommandBuffer, Buffer, DeviceSize, DeviceSize, IndexType) callconv(.c) void;
pub const PFN_cmdBindIndexBuffer2 = PFN_vkCmdBindIndexBuffer2;
const PFN_vkGetRenderingAreaGranularity = ?*const fn (Device, [*c]const RenderingAreaInfo, [*c]Extent2D) callconv(.c) void;
pub const PFN_getRenderingAreaGranularity = PFN_vkGetRenderingAreaGranularity;
const PFN_vkGetDeviceImageSubresourceLayout = ?*const fn (Device, [*c]const DeviceImageSubresourceInfo, [*c]SubresourceLayout2) callconv(.c) void;
pub const PFN_getDeviceImageSubresourceLayout = PFN_vkGetDeviceImageSubresourceLayout;
const PFN_vkGetImageSubresourceLayout2 = ?*const fn (Device, Image, [*c]const ImageSubresource2, [*c]SubresourceLayout2) callconv(.c) void;
pub const PFN_getImageSubresourceLayout2 = PFN_vkGetImageSubresourceLayout2;
const PFN_vkCmdPushDescriptorSet = ?*const fn (CommandBuffer, PipelineBindPoint, PipelineLayout, u32, u32, [*c]const WriteDescriptorSet) callconv(.c) void;
pub const PFN_cmdPushDescriptorSet = PFN_vkCmdPushDescriptorSet;
const PFN_vkCmdPushDescriptorSetWithTemplate = ?*const fn (CommandBuffer, DescriptorUpdateTemplate, PipelineLayout, u32, ?*const anyopaque) callconv(.c) void;
pub const PFN_cmdPushDescriptorSetWithTemplate = PFN_vkCmdPushDescriptorSetWithTemplate;
const PFN_vkCmdSetRenderingAttachmentLocations = ?*const fn (CommandBuffer, [*c]const RenderingAttachmentLocationInfo) callconv(.c) void;
pub const PFN_cmdSetRenderingAttachmentLocations = PFN_vkCmdSetRenderingAttachmentLocations;
const PFN_vkCmdSetRenderingInputAttachmentIndices = ?*const fn (CommandBuffer, [*c]const RenderingInputAttachmentIndexInfo) callconv(.c) void;
pub const PFN_cmdSetRenderingInputAttachmentIndices = PFN_vkCmdSetRenderingInputAttachmentIndices;
const PFN_vkCmdBindDescriptorSets2 = ?*const fn (CommandBuffer, [*c]const BindDescriptorSetsInfo) callconv(.c) void;
pub const PFN_cmdBindDescriptorSets2 = PFN_vkCmdBindDescriptorSets2;
const PFN_vkCmdPushConstants2 = ?*const fn (CommandBuffer, [*c]const PushConstantsInfo) callconv(.c) void;
pub const PFN_cmdPushConstants2 = PFN_vkCmdPushConstants2;
const PFN_vkCmdPushDescriptorSet2 = ?*const fn (CommandBuffer, [*c]const PushDescriptorSetInfo) callconv(.c) void;
pub const PFN_cmdPushDescriptorSet2 = PFN_vkCmdPushDescriptorSet2;
const PFN_vkCmdPushDescriptorSetWithTemplate2 = ?*const fn (CommandBuffer, [*c]const PushDescriptorSetWithTemplateInfo) callconv(.c) void;
pub const PFN_cmdPushDescriptorSetWithTemplate2 = PFN_vkCmdPushDescriptorSetWithTemplate2;
const PFN_vkCopyMemoryToImage = ?*const fn (Device, [*c]const CopyMemoryToImageInfo) callconv(.c) Result;
pub const PFN_copyMemoryToImage = PFN_vkCopyMemoryToImage;
const PFN_vkCopyImageToMemory = ?*const fn (Device, [*c]const CopyImageToMemoryInfo) callconv(.c) Result;
pub const PFN_copyImageToMemory = PFN_vkCopyImageToMemory;
const PFN_vkCopyImageToImage = ?*const fn (Device, [*c]const CopyImageToImageInfo) callconv(.c) Result;
pub const PFN_copyImageToImage = PFN_vkCopyImageToImage;
const PFN_vkTransitionImageLayout = ?*const fn (Device, u32, [*c]const HostImageLayoutTransitionInfo) callconv(.c) Result;
pub const PFN_transitionImageLayout = PFN_vkTransitionImageLayout;
const PFN_vkDestroySurfaceKHR = ?*const fn (Instance, SurfaceKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroySurfaceKHR = PFN_vkDestroySurfaceKHR;
const PFN_vkGetPhysicalDeviceSurfaceSupportKHR = ?*const fn (PhysicalDevice, u32, SurfaceKHR, [*c]Bool32) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfaceSupportKHR = PFN_vkGetPhysicalDeviceSurfaceSupportKHR;
const PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = ?*const fn (PhysicalDevice, SurfaceKHR, [*c]SurfaceCapabilitiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfaceCapabilitiesKHR = PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR;
const PFN_vkGetPhysicalDeviceSurfaceFormatsKHR = ?*const fn (PhysicalDevice, SurfaceKHR, [*c]u32, [*c]SurfaceFormatKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfaceFormatsKHR = PFN_vkGetPhysicalDeviceSurfaceFormatsKHR;
const PFN_vkGetPhysicalDeviceSurfacePresentModesKHR = ?*const fn (PhysicalDevice, SurfaceKHR, [*c]u32, [*c]PresentModeKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfacePresentModesKHR = PFN_vkGetPhysicalDeviceSurfacePresentModesKHR;
const PFN_vkCreateSwapchainKHR = ?*const fn (Device, [*c]const SwapchainCreateInfoKHR, [*c]const AllocationCallbacks, [*c]SwapchainKHR) callconv(.c) Result;
pub const PFN_createSwapchainKHR = PFN_vkCreateSwapchainKHR;
const PFN_vkDestroySwapchainKHR = ?*const fn (Device, SwapchainKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroySwapchainKHR = PFN_vkDestroySwapchainKHR;
const PFN_vkGetSwapchainImagesKHR = ?*const fn (Device, SwapchainKHR, [*c]u32, [*c]Image) callconv(.c) Result;
pub const PFN_getSwapchainImagesKHR = PFN_vkGetSwapchainImagesKHR;
const PFN_vkAcquireNextImageKHR = ?*const fn (Device, SwapchainKHR, u64, Semaphore, Fence, [*c]u32) callconv(.c) Result;
pub const PFN_acquireNextImageKHR = PFN_vkAcquireNextImageKHR;
const PFN_vkQueuePresentKHR = ?*const fn (Queue, [*c]const PresentInfoKHR) callconv(.c) Result;
pub const PFN_queuePresentKHR = PFN_vkQueuePresentKHR;
const PFN_vkGetDeviceGroupPresentCapabilitiesKHR = ?*const fn (Device, [*c]DeviceGroupPresentCapabilitiesKHR) callconv(.c) Result;
pub const PFN_getDeviceGroupPresentCapabilitiesKHR = PFN_vkGetDeviceGroupPresentCapabilitiesKHR;
const PFN_vkGetDeviceGroupSurfacePresentModesKHR = ?*const fn (Device, SurfaceKHR, [*c]DeviceGroupPresentModeFlagsKHR) callconv(.c) Result;
pub const PFN_getDeviceGroupSurfacePresentModesKHR = PFN_vkGetDeviceGroupSurfacePresentModesKHR;
const PFN_vkGetPhysicalDevicePresentRectanglesKHR = ?*const fn (PhysicalDevice, SurfaceKHR, [*c]u32, [*c]Rect2D) callconv(.c) Result;
pub const PFN_getPhysicalDevicePresentRectanglesKHR = PFN_vkGetPhysicalDevicePresentRectanglesKHR;
const PFN_vkAcquireNextImage2KHR = ?*const fn (Device, [*c]const AcquireNextImageInfoKHR, [*c]u32) callconv(.c) Result;
pub const PFN_acquireNextImage2KHR = PFN_vkAcquireNextImage2KHR;
const PFN_vkGetPhysicalDeviceDisplayPropertiesKHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]DisplayPropertiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceDisplayPropertiesKHR = PFN_vkGetPhysicalDeviceDisplayPropertiesKHR;
const PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]DisplayPlanePropertiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceDisplayPlanePropertiesKHR = PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR;
const PFN_vkGetDisplayPlaneSupportedDisplaysKHR = ?*const fn (PhysicalDevice, u32, [*c]u32, [*c]DisplayKHR) callconv(.c) Result;
pub const PFN_getDisplayPlaneSupportedDisplaysKHR = PFN_vkGetDisplayPlaneSupportedDisplaysKHR;
const PFN_vkGetDisplayModePropertiesKHR = ?*const fn (PhysicalDevice, DisplayKHR, [*c]u32, [*c]DisplayModePropertiesKHR) callconv(.c) Result;
pub const PFN_getDisplayModePropertiesKHR = PFN_vkGetDisplayModePropertiesKHR;
const PFN_vkCreateDisplayModeKHR = ?*const fn (PhysicalDevice, DisplayKHR, [*c]const DisplayModeCreateInfoKHR, [*c]const AllocationCallbacks, [*c]DisplayModeKHR) callconv(.c) Result;
pub const PFN_createDisplayModeKHR = PFN_vkCreateDisplayModeKHR;
const PFN_vkGetDisplayPlaneCapabilitiesKHR = ?*const fn (PhysicalDevice, DisplayModeKHR, u32, [*c]DisplayPlaneCapabilitiesKHR) callconv(.c) Result;
pub const PFN_getDisplayPlaneCapabilitiesKHR = PFN_vkGetDisplayPlaneCapabilitiesKHR;
const PFN_vkCreateDisplayPlaneSurfaceKHR = ?*const fn (Instance, [*c]const DisplaySurfaceCreateInfoKHR, [*c]const AllocationCallbacks, [*c]SurfaceKHR) callconv(.c) Result;
pub const PFN_createDisplayPlaneSurfaceKHR = PFN_vkCreateDisplayPlaneSurfaceKHR;
const PFN_vkCreateSharedSwapchainsKHR = ?*const fn (Device, u32, [*c]const SwapchainCreateInfoKHR, [*c]const AllocationCallbacks, [*c]SwapchainKHR) callconv(.c) Result;
pub const PFN_createSharedSwapchainsKHR = PFN_vkCreateSharedSwapchainsKHR;
const PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR = ?*const fn (PhysicalDevice, [*c]const VideoProfileInfoKHR, [*c]VideoCapabilitiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceVideoCapabilitiesKHR = PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR;
const PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceVideoFormatInfoKHR, [*c]u32, [*c]VideoFormatPropertiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceVideoFormatPropertiesKHR = PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR;
const PFN_vkCreateVideoSessionKHR = ?*const fn (Device, [*c]const VideoSessionCreateInfoKHR, [*c]const AllocationCallbacks, [*c]VideoSessionKHR) callconv(.c) Result;
pub const PFN_createVideoSessionKHR = PFN_vkCreateVideoSessionKHR;
const PFN_vkDestroyVideoSessionKHR = ?*const fn (Device, VideoSessionKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyVideoSessionKHR = PFN_vkDestroyVideoSessionKHR;
const PFN_vkGetVideoSessionMemoryRequirementsKHR = ?*const fn (Device, VideoSessionKHR, [*c]u32, [*c]VideoSessionMemoryRequirementsKHR) callconv(.c) Result;
pub const PFN_getVideoSessionMemoryRequirementsKHR = PFN_vkGetVideoSessionMemoryRequirementsKHR;
const PFN_vkBindVideoSessionMemoryKHR = ?*const fn (Device, VideoSessionKHR, u32, [*c]const BindVideoSessionMemoryInfoKHR) callconv(.c) Result;
pub const PFN_bindVideoSessionMemoryKHR = PFN_vkBindVideoSessionMemoryKHR;
const PFN_vkCreateVideoSessionParametersKHR = ?*const fn (Device, [*c]const VideoSessionParametersCreateInfoKHR, [*c]const AllocationCallbacks, [*c]VideoSessionParametersKHR) callconv(.c) Result;
pub const PFN_createVideoSessionParametersKHR = PFN_vkCreateVideoSessionParametersKHR;
const PFN_vkUpdateVideoSessionParametersKHR = ?*const fn (Device, VideoSessionParametersKHR, [*c]const VideoSessionParametersUpdateInfoKHR) callconv(.c) Result;
pub const PFN_updateVideoSessionParametersKHR = PFN_vkUpdateVideoSessionParametersKHR;
const PFN_vkDestroyVideoSessionParametersKHR = ?*const fn (Device, VideoSessionParametersKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyVideoSessionParametersKHR = PFN_vkDestroyVideoSessionParametersKHR;
const PFN_vkCmdBeginVideoCodingKHR = ?*const fn (CommandBuffer, [*c]const VideoBeginCodingInfoKHR) callconv(.c) void;
pub const PFN_cmdBeginVideoCodingKHR = PFN_vkCmdBeginVideoCodingKHR;
const PFN_vkCmdEndVideoCodingKHR = ?*const fn (CommandBuffer, [*c]const VideoEndCodingInfoKHR) callconv(.c) void;
pub const PFN_cmdEndVideoCodingKHR = PFN_vkCmdEndVideoCodingKHR;
const PFN_vkCmdControlVideoCodingKHR = ?*const fn (CommandBuffer, [*c]const VideoCodingControlInfoKHR) callconv(.c) void;
pub const PFN_cmdControlVideoCodingKHR = PFN_vkCmdControlVideoCodingKHR;
const PFN_vkCmdDecodeVideoKHR = ?*const fn (CommandBuffer, [*c]const VideoDecodeInfoKHR) callconv(.c) void;
pub const PFN_cmdDecodeVideoKHR = PFN_vkCmdDecodeVideoKHR;
const PFN_vkCmdBeginRenderingKHR = ?*const fn (CommandBuffer, [*c]const RenderingInfo) callconv(.c) void;
pub const PFN_cmdBeginRenderingKHR = PFN_vkCmdBeginRenderingKHR;
const PFN_vkCmdEndRenderingKHR = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdEndRenderingKHR = PFN_vkCmdEndRenderingKHR;
const PFN_vkGetPhysicalDeviceFeatures2KHR = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceFeatures2) callconv(.c) void;
pub const PFN_getPhysicalDeviceFeatures2KHR = PFN_vkGetPhysicalDeviceFeatures2KHR;
const PFN_vkGetPhysicalDeviceProperties2KHR = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceProperties2KHR = PFN_vkGetPhysicalDeviceProperties2KHR;
const PFN_vkGetPhysicalDeviceFormatProperties2KHR = ?*const fn (PhysicalDevice, Format, [*c]FormatProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceFormatProperties2KHR = PFN_vkGetPhysicalDeviceFormatProperties2KHR;
const PFN_vkGetPhysicalDeviceImageFormatProperties2KHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceImageFormatInfo2, [*c]ImageFormatProperties2) callconv(.c) Result;
pub const PFN_getPhysicalDeviceImageFormatProperties2KHR = PFN_vkGetPhysicalDeviceImageFormatProperties2KHR;
const PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]QueueFamilyProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceQueueFamilyProperties2KHR = PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR;
const PFN_vkGetPhysicalDeviceMemoryProperties2KHR = ?*const fn (PhysicalDevice, [*c]PhysicalDeviceMemoryProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceMemoryProperties2KHR = PFN_vkGetPhysicalDeviceMemoryProperties2KHR;
const PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceSparseImageFormatInfo2, [*c]u32, [*c]SparseImageFormatProperties2) callconv(.c) void;
pub const PFN_getPhysicalDeviceSparseImageFormatProperties2KHR = PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
const PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR = ?*const fn (Device, u32, u32, u32, [*c]PeerMemoryFeatureFlags) callconv(.c) void;
pub const PFN_getDeviceGroupPeerMemoryFeaturesKHR = PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR;
const PFN_vkCmdSetDeviceMaskKHR = ?*const fn (CommandBuffer, u32) callconv(.c) void;
pub const PFN_cmdSetDeviceMaskKHR = PFN_vkCmdSetDeviceMaskKHR;
const PFN_vkCmdDispatchBaseKHR = ?*const fn (CommandBuffer, u32, u32, u32, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDispatchBaseKHR = PFN_vkCmdDispatchBaseKHR;
const PFN_vkTrimCommandPoolKHR = ?*const fn (Device, CommandPool, CommandPoolTrimFlags) callconv(.c) void;
pub const PFN_trimCommandPoolKHR = PFN_vkTrimCommandPoolKHR;
const PFN_vkEnumeratePhysicalDeviceGroupsKHR = ?*const fn (Instance, [*c]u32, [*c]PhysicalDeviceGroupProperties) callconv(.c) Result;
pub const PFN_enumeratePhysicalDeviceGroupsKHR = PFN_vkEnumeratePhysicalDeviceGroupsKHR;
const PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalBufferInfo, [*c]ExternalBufferProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalBufferPropertiesKHR = PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR;
const PFN_vkGetMemoryFdKHR = ?*const fn (Device, [*c]const MemoryGetFdInfoKHR, [*c]c_int) callconv(.c) Result;
pub const PFN_getMemoryFdKHR = PFN_vkGetMemoryFdKHR;
const PFN_vkGetMemoryFdPropertiesKHR = ?*const fn (Device, ExternalMemoryHandleTypeFlagBits, c_int, [*c]MemoryFdPropertiesKHR) callconv(.c) Result;
pub const PFN_getMemoryFdPropertiesKHR = PFN_vkGetMemoryFdPropertiesKHR;
const PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalSemaphoreInfo, [*c]ExternalSemaphoreProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalSemaphorePropertiesKHR = PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
const PFN_vkImportSemaphoreFdKHR = ?*const fn (Device, [*c]const ImportSemaphoreFdInfoKHR) callconv(.c) Result;
pub const PFN_importSemaphoreFdKHR = PFN_vkImportSemaphoreFdKHR;
const PFN_vkGetSemaphoreFdKHR = ?*const fn (Device, [*c]const SemaphoreGetFdInfoKHR, [*c]c_int) callconv(.c) Result;
pub const PFN_getSemaphoreFdKHR = PFN_vkGetSemaphoreFdKHR;
const PFN_vkCmdPushDescriptorSetKHR = ?*const fn (CommandBuffer, PipelineBindPoint, PipelineLayout, u32, u32, [*c]const WriteDescriptorSet) callconv(.c) void;
pub const PFN_cmdPushDescriptorSetKHR = PFN_vkCmdPushDescriptorSetKHR;
const PFN_vkCmdPushDescriptorSetWithTemplateKHR = ?*const fn (CommandBuffer, DescriptorUpdateTemplate, PipelineLayout, u32, ?*const anyopaque) callconv(.c) void;
pub const PFN_cmdPushDescriptorSetWithTemplateKHR = PFN_vkCmdPushDescriptorSetWithTemplateKHR;
const PFN_vkCreateDescriptorUpdateTemplateKHR = ?*const fn (Device, [*c]const DescriptorUpdateTemplateCreateInfo, [*c]const AllocationCallbacks, [*c]DescriptorUpdateTemplate) callconv(.c) Result;
pub const PFN_createDescriptorUpdateTemplateKHR = PFN_vkCreateDescriptorUpdateTemplateKHR;
const PFN_vkDestroyDescriptorUpdateTemplateKHR = ?*const fn (Device, DescriptorUpdateTemplate, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDescriptorUpdateTemplateKHR = PFN_vkDestroyDescriptorUpdateTemplateKHR;
const PFN_vkUpdateDescriptorSetWithTemplateKHR = ?*const fn (Device, DescriptorSet, DescriptorUpdateTemplate, ?*const anyopaque) callconv(.c) void;
pub const PFN_updateDescriptorSetWithTemplateKHR = PFN_vkUpdateDescriptorSetWithTemplateKHR;
const PFN_vkCreateRenderPass2KHR = ?*const fn (Device, [*c]const RenderPassCreateInfo2, [*c]const AllocationCallbacks, [*c]RenderPass) callconv(.c) Result;
pub const PFN_createRenderPass2KHR = PFN_vkCreateRenderPass2KHR;
const PFN_vkCmdBeginRenderPass2KHR = ?*const fn (CommandBuffer, [*c]const RenderPassBeginInfo, [*c]const SubpassBeginInfo) callconv(.c) void;
pub const PFN_cmdBeginRenderPass2KHR = PFN_vkCmdBeginRenderPass2KHR;
const PFN_vkCmdNextSubpass2KHR = ?*const fn (CommandBuffer, [*c]const SubpassBeginInfo, [*c]const SubpassEndInfo) callconv(.c) void;
pub const PFN_cmdNextSubpass2KHR = PFN_vkCmdNextSubpass2KHR;
const PFN_vkCmdEndRenderPass2KHR = ?*const fn (CommandBuffer, [*c]const SubpassEndInfo) callconv(.c) void;
pub const PFN_cmdEndRenderPass2KHR = PFN_vkCmdEndRenderPass2KHR;
const PFN_vkGetSwapchainStatusKHR = ?*const fn (Device, SwapchainKHR) callconv(.c) Result;
pub const PFN_getSwapchainStatusKHR = PFN_vkGetSwapchainStatusKHR;
const PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalFenceInfo, [*c]ExternalFenceProperties) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalFencePropertiesKHR = PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR;
const PFN_vkImportFenceFdKHR = ?*const fn (Device, [*c]const ImportFenceFdInfoKHR) callconv(.c) Result;
pub const PFN_importFenceFdKHR = PFN_vkImportFenceFdKHR;
const PFN_vkGetFenceFdKHR = ?*const fn (Device, [*c]const FenceGetFdInfoKHR, [*c]c_int) callconv(.c) Result;
pub const PFN_getFenceFdKHR = PFN_vkGetFenceFdKHR;
const PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = ?*const fn (PhysicalDevice, u32, [*c]u32, [*c]PerformanceCounterKHR, [*c]PerformanceCounterDescriptionKHR) callconv(.c) Result;
pub const PFN_enumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR;
const PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = ?*const fn (PhysicalDevice, [*c]const QueryPoolPerformanceCreateInfoKHR, [*c]u32) callconv(.c) void;
pub const PFN_getPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR;
const PFN_vkAcquireProfilingLockKHR = ?*const fn (Device, [*c]const AcquireProfilingLockInfoKHR) callconv(.c) Result;
pub const PFN_acquireProfilingLockKHR = PFN_vkAcquireProfilingLockKHR;
const PFN_vkReleaseProfilingLockKHR = ?*const fn (Device) callconv(.c) void;
pub const PFN_releaseProfilingLockKHR = PFN_vkReleaseProfilingLockKHR;
const PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceSurfaceInfo2KHR, [*c]SurfaceCapabilities2KHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfaceCapabilities2KHR = PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR;
const PFN_vkGetPhysicalDeviceSurfaceFormats2KHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceSurfaceInfo2KHR, [*c]u32, [*c]SurfaceFormat2KHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfaceFormats2KHR = PFN_vkGetPhysicalDeviceSurfaceFormats2KHR;
const PFN_vkGetPhysicalDeviceDisplayProperties2KHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]DisplayProperties2KHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceDisplayProperties2KHR = PFN_vkGetPhysicalDeviceDisplayProperties2KHR;
const PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]DisplayPlaneProperties2KHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceDisplayPlaneProperties2KHR = PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR;
const PFN_vkGetDisplayModeProperties2KHR = ?*const fn (PhysicalDevice, DisplayKHR, [*c]u32, [*c]DisplayModeProperties2KHR) callconv(.c) Result;
pub const PFN_getDisplayModeProperties2KHR = PFN_vkGetDisplayModeProperties2KHR;
const PFN_vkGetDisplayPlaneCapabilities2KHR = ?*const fn (PhysicalDevice, [*c]const DisplayPlaneInfo2KHR, [*c]DisplayPlaneCapabilities2KHR) callconv(.c) Result;
pub const PFN_getDisplayPlaneCapabilities2KHR = PFN_vkGetDisplayPlaneCapabilities2KHR;
const PFN_vkGetImageMemoryRequirements2KHR = ?*const fn (Device, [*c]const ImageMemoryRequirementsInfo2, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getImageMemoryRequirements2KHR = PFN_vkGetImageMemoryRequirements2KHR;
const PFN_vkGetBufferMemoryRequirements2KHR = ?*const fn (Device, [*c]const BufferMemoryRequirementsInfo2, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getBufferMemoryRequirements2KHR = PFN_vkGetBufferMemoryRequirements2KHR;
const PFN_vkGetImageSparseMemoryRequirements2KHR = ?*const fn (Device, [*c]const ImageSparseMemoryRequirementsInfo2, [*c]u32, [*c]SparseImageMemoryRequirements2) callconv(.c) void;
pub const PFN_getImageSparseMemoryRequirements2KHR = PFN_vkGetImageSparseMemoryRequirements2KHR;
const PFN_vkCreateSamplerYcbcrConversionKHR = ?*const fn (Device, [*c]const SamplerYcbcrConversionCreateInfo, [*c]const AllocationCallbacks, [*c]SamplerYcbcrConversion) callconv(.c) Result;
pub const PFN_createSamplerYcbcrConversionKHR = PFN_vkCreateSamplerYcbcrConversionKHR;
const PFN_vkDestroySamplerYcbcrConversionKHR = ?*const fn (Device, SamplerYcbcrConversion, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroySamplerYcbcrConversionKHR = PFN_vkDestroySamplerYcbcrConversionKHR;
const PFN_vkBindBufferMemory2KHR = ?*const fn (Device, u32, [*c]const BindBufferMemoryInfo) callconv(.c) Result;
pub const PFN_bindBufferMemory2KHR = PFN_vkBindBufferMemory2KHR;
const PFN_vkBindImageMemory2KHR = ?*const fn (Device, u32, [*c]const BindImageMemoryInfo) callconv(.c) Result;
pub const PFN_bindImageMemory2KHR = PFN_vkBindImageMemory2KHR;
const PFN_vkGetDescriptorSetLayoutSupportKHR = ?*const fn (Device, [*c]const DescriptorSetLayoutCreateInfo, [*c]DescriptorSetLayoutSupport) callconv(.c) void;
pub const PFN_getDescriptorSetLayoutSupportKHR = PFN_vkGetDescriptorSetLayoutSupportKHR;
const PFN_vkCmdDrawIndirectCountKHR = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndirectCountKHR = PFN_vkCmdDrawIndirectCountKHR;
const PFN_vkCmdDrawIndexedIndirectCountKHR = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndexedIndirectCountKHR = PFN_vkCmdDrawIndexedIndirectCountKHR;
const PFN_vkGetSemaphoreCounterValueKHR = ?*const fn (Device, Semaphore, [*c]u64) callconv(.c) Result;
pub const PFN_getSemaphoreCounterValueKHR = PFN_vkGetSemaphoreCounterValueKHR;
const PFN_vkWaitSemaphoresKHR = ?*const fn (Device, [*c]const SemaphoreWaitInfo, u64) callconv(.c) Result;
pub const PFN_waitSemaphoresKHR = PFN_vkWaitSemaphoresKHR;
const PFN_vkSignalSemaphoreKHR = ?*const fn (Device, [*c]const SemaphoreSignalInfo) callconv(.c) Result;
pub const PFN_signalSemaphoreKHR = PFN_vkSignalSemaphoreKHR;
const PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]PhysicalDeviceFragmentShadingRateKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceFragmentShadingRatesKHR = PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR;
const PFN_vkCmdSetFragmentShadingRateKHR = ?*const fn (CommandBuffer, [*c]const Extent2D, [*c]const FragmentShadingRateCombinerOpKHR) callconv(.c) void;
pub const PFN_cmdSetFragmentShadingRateKHR = PFN_vkCmdSetFragmentShadingRateKHR;
const PFN_vkCmdSetRenderingAttachmentLocationsKHR = ?*const fn (CommandBuffer, [*c]const RenderingAttachmentLocationInfo) callconv(.c) void;
pub const PFN_cmdSetRenderingAttachmentLocationsKHR = PFN_vkCmdSetRenderingAttachmentLocationsKHR;
const PFN_vkCmdSetRenderingInputAttachmentIndicesKHR = ?*const fn (CommandBuffer, [*c]const RenderingInputAttachmentIndexInfo) callconv(.c) void;
pub const PFN_cmdSetRenderingInputAttachmentIndicesKHR = PFN_vkCmdSetRenderingInputAttachmentIndicesKHR;
const PFN_vkWaitForPresentKHR = ?*const fn (Device, SwapchainKHR, u64, u64) callconv(.c) Result;
pub const PFN_waitForPresentKHR = PFN_vkWaitForPresentKHR;
const PFN_vkGetBufferDeviceAddressKHR = ?*const fn (Device, [*c]const BufferDeviceAddressInfo) callconv(.c) DeviceAddress;
pub const PFN_getBufferDeviceAddressKHR = PFN_vkGetBufferDeviceAddressKHR;
const PFN_vkGetBufferOpaqueCaptureAddressKHR = ?*const fn (Device, [*c]const BufferDeviceAddressInfo) callconv(.c) u64;
pub const PFN_getBufferOpaqueCaptureAddressKHR = PFN_vkGetBufferOpaqueCaptureAddressKHR;
const PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR = ?*const fn (Device, [*c]const DeviceMemoryOpaqueCaptureAddressInfo) callconv(.c) u64;
pub const PFN_getDeviceMemoryOpaqueCaptureAddressKHR = PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR;
const PFN_vkCreateDeferredOperationKHR = ?*const fn (Device, [*c]const AllocationCallbacks, [*c]DeferredOperationKHR) callconv(.c) Result;
pub const PFN_createDeferredOperationKHR = PFN_vkCreateDeferredOperationKHR;
const PFN_vkDestroyDeferredOperationKHR = ?*const fn (Device, DeferredOperationKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDeferredOperationKHR = PFN_vkDestroyDeferredOperationKHR;
const PFN_vkGetDeferredOperationMaxConcurrencyKHR = ?*const fn (Device, DeferredOperationKHR) callconv(.c) u32;
pub const PFN_getDeferredOperationMaxConcurrencyKHR = PFN_vkGetDeferredOperationMaxConcurrencyKHR;
const PFN_vkGetDeferredOperationResultKHR = ?*const fn (Device, DeferredOperationKHR) callconv(.c) Result;
pub const PFN_getDeferredOperationResultKHR = PFN_vkGetDeferredOperationResultKHR;
const PFN_vkDeferredOperationJoinKHR = ?*const fn (Device, DeferredOperationKHR) callconv(.c) Result;
pub const PFN_deferredOperationJoinKHR = PFN_vkDeferredOperationJoinKHR;
const PFN_vkGetPipelineExecutablePropertiesKHR = ?*const fn (Device, [*c]const PipelineInfoKHR, [*c]u32, [*c]PipelineExecutablePropertiesKHR) callconv(.c) Result;
pub const PFN_getPipelineExecutablePropertiesKHR = PFN_vkGetPipelineExecutablePropertiesKHR;
const PFN_vkGetPipelineExecutableStatisticsKHR = ?*const fn (Device, [*c]const PipelineExecutableInfoKHR, [*c]u32, [*c]PipelineExecutableStatisticKHR) callconv(.c) Result;
pub const PFN_getPipelineExecutableStatisticsKHR = PFN_vkGetPipelineExecutableStatisticsKHR;
const PFN_vkGetPipelineExecutableInternalRepresentationsKHR = ?*const fn (Device, [*c]const PipelineExecutableInfoKHR, [*c]u32, [*c]PipelineExecutableInternalRepresentationKHR) callconv(.c) Result;
pub const PFN_getPipelineExecutableInternalRepresentationsKHR = PFN_vkGetPipelineExecutableInternalRepresentationsKHR;
const PFN_vkMapMemory2KHR = ?*const fn (Device, [*c]const MemoryMapInfo, [*c]?*anyopaque) callconv(.c) Result;
pub const PFN_mapMemory2KHR = PFN_vkMapMemory2KHR;
const PFN_vkUnmapMemory2KHR = ?*const fn (Device, [*c]const MemoryUnmapInfo) callconv(.c) Result;
pub const PFN_unmapMemory2KHR = PFN_vkUnmapMemory2KHR;
const PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceVideoEncodeQualityLevelInfoKHR, [*c]VideoEncodeQualityLevelPropertiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR;
const PFN_vkGetEncodedVideoSessionParametersKHR = ?*const fn (Device, [*c]const VideoEncodeSessionParametersGetInfoKHR, [*c]VideoEncodeSessionParametersFeedbackInfoKHR, [*c]usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getEncodedVideoSessionParametersKHR = PFN_vkGetEncodedVideoSessionParametersKHR;
const PFN_vkCmdEncodeVideoKHR = ?*const fn (CommandBuffer, [*c]const VideoEncodeInfoKHR) callconv(.c) void;
pub const PFN_cmdEncodeVideoKHR = PFN_vkCmdEncodeVideoKHR;
const PFN_vkCmdSetEvent2KHR = ?*const fn (CommandBuffer, Event, [*c]const DependencyInfo) callconv(.c) void;
pub const PFN_cmdSetEvent2KHR = PFN_vkCmdSetEvent2KHR;
const PFN_vkCmdResetEvent2KHR = ?*const fn (CommandBuffer, Event, PipelineStageFlags2) callconv(.c) void;
pub const PFN_cmdResetEvent2KHR = PFN_vkCmdResetEvent2KHR;
const PFN_vkCmdWaitEvents2KHR = ?*const fn (CommandBuffer, u32, [*c]const Event, [*c]const DependencyInfo) callconv(.c) void;
pub const PFN_cmdWaitEvents2KHR = PFN_vkCmdWaitEvents2KHR;
const PFN_vkCmdPipelineBarrier2KHR = ?*const fn (CommandBuffer, [*c]const DependencyInfo) callconv(.c) void;
pub const PFN_cmdPipelineBarrier2KHR = PFN_vkCmdPipelineBarrier2KHR;
const PFN_vkCmdWriteTimestamp2KHR = ?*const fn (CommandBuffer, PipelineStageFlags2, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdWriteTimestamp2KHR = PFN_vkCmdWriteTimestamp2KHR;
const PFN_vkQueueSubmit2KHR = ?*const fn (Queue, u32, [*c]const SubmitInfo2, Fence) callconv(.c) Result;
pub const PFN_queueSubmit2KHR = PFN_vkQueueSubmit2KHR;
const PFN_vkCmdCopyBuffer2KHR = ?*const fn (CommandBuffer, [*c]const CopyBufferInfo2) callconv(.c) void;
pub const PFN_cmdCopyBuffer2KHR = PFN_vkCmdCopyBuffer2KHR;
const PFN_vkCmdCopyImage2KHR = ?*const fn (CommandBuffer, [*c]const CopyImageInfo2) callconv(.c) void;
pub const PFN_cmdCopyImage2KHR = PFN_vkCmdCopyImage2KHR;
const PFN_vkCmdCopyBufferToImage2KHR = ?*const fn (CommandBuffer, [*c]const CopyBufferToImageInfo2) callconv(.c) void;
pub const PFN_cmdCopyBufferToImage2KHR = PFN_vkCmdCopyBufferToImage2KHR;
const PFN_vkCmdCopyImageToBuffer2KHR = ?*const fn (CommandBuffer, [*c]const CopyImageToBufferInfo2) callconv(.c) void;
pub const PFN_cmdCopyImageToBuffer2KHR = PFN_vkCmdCopyImageToBuffer2KHR;
const PFN_vkCmdBlitImage2KHR = ?*const fn (CommandBuffer, [*c]const BlitImageInfo2) callconv(.c) void;
pub const PFN_cmdBlitImage2KHR = PFN_vkCmdBlitImage2KHR;
const PFN_vkCmdResolveImage2KHR = ?*const fn (CommandBuffer, [*c]const ResolveImageInfo2) callconv(.c) void;
pub const PFN_cmdResolveImage2KHR = PFN_vkCmdResolveImage2KHR;
const PFN_vkCmdTraceRaysIndirect2KHR = ?*const fn (CommandBuffer, DeviceAddress) callconv(.c) void;
pub const PFN_cmdTraceRaysIndirect2KHR = PFN_vkCmdTraceRaysIndirect2KHR;
const PFN_vkGetDeviceBufferMemoryRequirementsKHR = ?*const fn (Device, [*c]const DeviceBufferMemoryRequirements, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceBufferMemoryRequirementsKHR = PFN_vkGetDeviceBufferMemoryRequirementsKHR;
const PFN_vkGetDeviceImageMemoryRequirementsKHR = ?*const fn (Device, [*c]const DeviceImageMemoryRequirements, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceImageMemoryRequirementsKHR = PFN_vkGetDeviceImageMemoryRequirementsKHR;
const PFN_vkGetDeviceImageSparseMemoryRequirementsKHR = ?*const fn (Device, [*c]const DeviceImageMemoryRequirements, [*c]u32, [*c]SparseImageMemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceImageSparseMemoryRequirementsKHR = PFN_vkGetDeviceImageSparseMemoryRequirementsKHR;
const PFN_vkCmdBindIndexBuffer2KHR = ?*const fn (CommandBuffer, Buffer, DeviceSize, DeviceSize, IndexType) callconv(.c) void;
pub const PFN_cmdBindIndexBuffer2KHR = PFN_vkCmdBindIndexBuffer2KHR;
const PFN_vkGetRenderingAreaGranularityKHR = ?*const fn (Device, [*c]const RenderingAreaInfo, [*c]Extent2D) callconv(.c) void;
pub const PFN_getRenderingAreaGranularityKHR = PFN_vkGetRenderingAreaGranularityKHR;
const PFN_vkGetDeviceImageSubresourceLayoutKHR = ?*const fn (Device, [*c]const DeviceImageSubresourceInfo, [*c]SubresourceLayout2) callconv(.c) void;
pub const PFN_getDeviceImageSubresourceLayoutKHR = PFN_vkGetDeviceImageSubresourceLayoutKHR;
const PFN_vkGetImageSubresourceLayout2KHR = ?*const fn (Device, Image, [*c]const ImageSubresource2, [*c]SubresourceLayout2) callconv(.c) void;
pub const PFN_getImageSubresourceLayout2KHR = PFN_vkGetImageSubresourceLayout2KHR;
const PFN_vkWaitForPresent2KHR = ?*const fn (Device, SwapchainKHR, [*c]const PresentWait2InfoKHR) callconv(.c) Result;
pub const PFN_waitForPresent2KHR = PFN_vkWaitForPresent2KHR;
const PFN_vkCreatePipelineBinariesKHR = ?*const fn (Device, [*c]const PipelineBinaryCreateInfoKHR, [*c]const AllocationCallbacks, [*c]PipelineBinaryHandlesInfoKHR) callconv(.c) Result;
pub const PFN_createPipelineBinariesKHR = PFN_vkCreatePipelineBinariesKHR;
const PFN_vkDestroyPipelineBinaryKHR = ?*const fn (Device, PipelineBinaryKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyPipelineBinaryKHR = PFN_vkDestroyPipelineBinaryKHR;
const PFN_vkGetPipelineKeyKHR = ?*const fn (Device, [*c]const PipelineCreateInfoKHR, [*c]PipelineBinaryKeyKHR) callconv(.c) Result;
pub const PFN_getPipelineKeyKHR = PFN_vkGetPipelineKeyKHR;
const PFN_vkGetPipelineBinaryDataKHR = ?*const fn (Device, [*c]const PipelineBinaryDataInfoKHR, [*c]PipelineBinaryKeyKHR, [*c]usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getPipelineBinaryDataKHR = PFN_vkGetPipelineBinaryDataKHR;
const PFN_vkReleaseCapturedPipelineDataKHR = ?*const fn (Device, [*c]const ReleaseCapturedPipelineDataInfoKHR, [*c]const AllocationCallbacks) callconv(.c) Result;
pub const PFN_releaseCapturedPipelineDataKHR = PFN_vkReleaseCapturedPipelineDataKHR;
const PFN_vkReleaseSwapchainImagesKHR = ?*const fn (Device, [*c]const ReleaseSwapchainImagesInfoKHR) callconv(.c) Result;
pub const PFN_releaseSwapchainImagesKHR = PFN_vkReleaseSwapchainImagesKHR;
const PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]CooperativeMatrixPropertiesKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceCooperativeMatrixPropertiesKHR = PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR;
const PFN_vkCmdSetLineStippleKHR = ?*const fn (CommandBuffer, u32, u16) callconv(.c) void;
pub const PFN_cmdSetLineStippleKHR = PFN_vkCmdSetLineStippleKHR;
const PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR = ?*const fn (PhysicalDevice, [*c]u32, [*c]TimeDomainKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceCalibrateableTimeDomainsKHR = PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR;
const PFN_vkGetCalibratedTimestampsKHR = ?*const fn (Device, u32, [*c]const CalibratedTimestampInfoKHR, [*c]u64, [*c]u64) callconv(.c) Result;
pub const PFN_getCalibratedTimestampsKHR = PFN_vkGetCalibratedTimestampsKHR;
const PFN_vkCmdBindDescriptorSets2KHR = ?*const fn (CommandBuffer, [*c]const BindDescriptorSetsInfo) callconv(.c) void;
pub const PFN_cmdBindDescriptorSets2KHR = PFN_vkCmdBindDescriptorSets2KHR;
const PFN_vkCmdPushConstants2KHR = ?*const fn (CommandBuffer, [*c]const PushConstantsInfo) callconv(.c) void;
pub const PFN_cmdPushConstants2KHR = PFN_vkCmdPushConstants2KHR;
const PFN_vkCmdPushDescriptorSet2KHR = ?*const fn (CommandBuffer, [*c]const PushDescriptorSetInfo) callconv(.c) void;
pub const PFN_cmdPushDescriptorSet2KHR = PFN_vkCmdPushDescriptorSet2KHR;
const PFN_vkCmdPushDescriptorSetWithTemplate2KHR = ?*const fn (CommandBuffer, [*c]const PushDescriptorSetWithTemplateInfo) callconv(.c) void;
pub const PFN_cmdPushDescriptorSetWithTemplate2KHR = PFN_vkCmdPushDescriptorSetWithTemplate2KHR;
const PFN_vkCmdSetDescriptorBufferOffsets2EXT = ?*const fn (CommandBuffer, [*c]const SetDescriptorBufferOffsetsInfoEXT) callconv(.c) void;
pub const PFN_cmdSetDescriptorBufferOffsets2EXT = PFN_vkCmdSetDescriptorBufferOffsets2EXT;
const PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = ?*const fn (CommandBuffer, [*c]const BindDescriptorBufferEmbeddedSamplersInfoEXT) callconv(.c) void;
pub const PFN_cmdBindDescriptorBufferEmbeddedSamplers2EXT = PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
const PFN_vkDebugReportCallbackEXT = ?*const fn (DebugReportFlagsEXT, DebugReportObjectTypeEXT, u64, usize, i32, [*c]const u8, [*c]const u8, ?*anyopaque) callconv(.c) Bool32;
pub const PFN_debugReportCallbackEXT = PFN_vkDebugReportCallbackEXT;
const PFN_vkCreateDebugReportCallbackEXT = ?*const fn (Instance, [*c]const DebugReportCallbackCreateInfoEXT, [*c]const AllocationCallbacks, [*c]DebugReportCallbackEXT) callconv(.c) Result;
pub const PFN_createDebugReportCallbackEXT = PFN_vkCreateDebugReportCallbackEXT;
const PFN_vkDestroyDebugReportCallbackEXT = ?*const fn (Instance, DebugReportCallbackEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDebugReportCallbackEXT = PFN_vkDestroyDebugReportCallbackEXT;
const PFN_vkDebugReportMessageEXT = ?*const fn (Instance, DebugReportFlagsEXT, DebugReportObjectTypeEXT, u64, usize, i32, [*c]const u8, [*c]const u8) callconv(.c) void;
pub const PFN_debugReportMessageEXT = PFN_vkDebugReportMessageEXT;
const PFN_vkDebugMarkerSetObjectTagEXT = ?*const fn (Device, [*c]const DebugMarkerObjectTagInfoEXT) callconv(.c) Result;
pub const PFN_debugMarkerSetObjectTagEXT = PFN_vkDebugMarkerSetObjectTagEXT;
const PFN_vkDebugMarkerSetObjectNameEXT = ?*const fn (Device, [*c]const DebugMarkerObjectNameInfoEXT) callconv(.c) Result;
pub const PFN_debugMarkerSetObjectNameEXT = PFN_vkDebugMarkerSetObjectNameEXT;
const PFN_vkCmdDebugMarkerBeginEXT = ?*const fn (CommandBuffer, [*c]const DebugMarkerMarkerInfoEXT) callconv(.c) void;
pub const PFN_cmdDebugMarkerBeginEXT = PFN_vkCmdDebugMarkerBeginEXT;
const PFN_vkCmdDebugMarkerEndEXT = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdDebugMarkerEndEXT = PFN_vkCmdDebugMarkerEndEXT;
const PFN_vkCmdDebugMarkerInsertEXT = ?*const fn (CommandBuffer, [*c]const DebugMarkerMarkerInfoEXT) callconv(.c) void;
pub const PFN_cmdDebugMarkerInsertEXT = PFN_vkCmdDebugMarkerInsertEXT;
const PFN_vkCmdBindTransformFeedbackBuffersEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const Buffer, [*c]const DeviceSize, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdBindTransformFeedbackBuffersEXT = PFN_vkCmdBindTransformFeedbackBuffersEXT;
const PFN_vkCmdBeginTransformFeedbackEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const Buffer, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdBeginTransformFeedbackEXT = PFN_vkCmdBeginTransformFeedbackEXT;
const PFN_vkCmdEndTransformFeedbackEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const Buffer, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdEndTransformFeedbackEXT = PFN_vkCmdEndTransformFeedbackEXT;
const PFN_vkCmdBeginQueryIndexedEXT = ?*const fn (CommandBuffer, QueryPool, u32, QueryControlFlags, u32) callconv(.c) void;
pub const PFN_cmdBeginQueryIndexedEXT = PFN_vkCmdBeginQueryIndexedEXT;
const PFN_vkCmdEndQueryIndexedEXT = ?*const fn (CommandBuffer, QueryPool, u32, u32) callconv(.c) void;
pub const PFN_cmdEndQueryIndexedEXT = PFN_vkCmdEndQueryIndexedEXT;
const PFN_vkCmdDrawIndirectByteCountEXT = ?*const fn (CommandBuffer, u32, u32, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndirectByteCountEXT = PFN_vkCmdDrawIndirectByteCountEXT;
const PFN_vkCreateCuModuleNVX = ?*const fn (Device, [*c]const CuModuleCreateInfoNVX, [*c]const AllocationCallbacks, [*c]CuModuleNVX) callconv(.c) Result;
pub const PFN_createCuModuleNVX = PFN_vkCreateCuModuleNVX;
const PFN_vkCreateCuFunctionNVX = ?*const fn (Device, [*c]const CuFunctionCreateInfoNVX, [*c]const AllocationCallbacks, [*c]CuFunctionNVX) callconv(.c) Result;
pub const PFN_createCuFunctionNVX = PFN_vkCreateCuFunctionNVX;
const PFN_vkDestroyCuModuleNVX = ?*const fn (Device, CuModuleNVX, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyCuModuleNVX = PFN_vkDestroyCuModuleNVX;
const PFN_vkDestroyCuFunctionNVX = ?*const fn (Device, CuFunctionNVX, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyCuFunctionNVX = PFN_vkDestroyCuFunctionNVX;
const PFN_vkCmdCuLaunchKernelNVX = ?*const fn (CommandBuffer, [*c]const CuLaunchInfoNVX) callconv(.c) void;
pub const PFN_cmdCuLaunchKernelNVX = PFN_vkCmdCuLaunchKernelNVX;
const PFN_vkGetImageViewHandleNVX = ?*const fn (Device, [*c]const ImageViewHandleInfoNVX) callconv(.c) u32;
pub const PFN_getImageViewHandleNVX = PFN_vkGetImageViewHandleNVX;
const PFN_vkGetImageViewHandle64NVX = ?*const fn (Device, [*c]const ImageViewHandleInfoNVX) callconv(.c) u64;
pub const PFN_getImageViewHandle64NVX = PFN_vkGetImageViewHandle64NVX;
const PFN_vkGetImageViewAddressNVX = ?*const fn (Device, ImageView, [*c]ImageViewAddressPropertiesNVX) callconv(.c) Result;
pub const PFN_getImageViewAddressNVX = PFN_vkGetImageViewAddressNVX;
const PFN_vkCmdDrawIndirectCountAMD = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndirectCountAMD = PFN_vkCmdDrawIndirectCountAMD;
const PFN_vkCmdDrawIndexedIndirectCountAMD = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawIndexedIndirectCountAMD = PFN_vkCmdDrawIndexedIndirectCountAMD;
const PFN_vkGetShaderInfoAMD = ?*const fn (Device, Pipeline, ShaderStageFlagBits, ShaderInfoTypeAMD, [*c]usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getShaderInfoAMD = PFN_vkGetShaderInfoAMD;
const PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = ?*const fn (PhysicalDevice, Format, ImageType, ImageTiling, ImageUsageFlags, ImageCreateFlags, ExternalMemoryHandleTypeFlagsNV, [*c]ExternalImageFormatPropertiesNV) callconv(.c) Result;
pub const PFN_getPhysicalDeviceExternalImageFormatPropertiesNV = PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV;
const PFN_vkCmdBeginConditionalRenderingEXT = ?*const fn (CommandBuffer, [*c]const ConditionalRenderingBeginInfoEXT) callconv(.c) void;
pub const PFN_cmdBeginConditionalRenderingEXT = PFN_vkCmdBeginConditionalRenderingEXT;
const PFN_vkCmdEndConditionalRenderingEXT = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdEndConditionalRenderingEXT = PFN_vkCmdEndConditionalRenderingEXT;
const PFN_vkCmdSetViewportWScalingNV = ?*const fn (CommandBuffer, u32, u32, [*c]const ViewportWScalingNV) callconv(.c) void;
pub const PFN_cmdSetViewportWScalingNV = PFN_vkCmdSetViewportWScalingNV;
const PFN_vkReleaseDisplayEXT = ?*const fn (PhysicalDevice, DisplayKHR) callconv(.c) Result;
pub const PFN_releaseDisplayEXT = PFN_vkReleaseDisplayEXT;
const PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT = ?*const fn (PhysicalDevice, SurfaceKHR, [*c]SurfaceCapabilities2EXT) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfaceCapabilities2EXT = PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT;
const PFN_vkDisplayPowerControlEXT = ?*const fn (Device, DisplayKHR, [*c]const DisplayPowerInfoEXT) callconv(.c) Result;
pub const PFN_displayPowerControlEXT = PFN_vkDisplayPowerControlEXT;
const PFN_vkRegisterDeviceEventEXT = ?*const fn (Device, [*c]const DeviceEventInfoEXT, [*c]const AllocationCallbacks, [*c]Fence) callconv(.c) Result;
pub const PFN_registerDeviceEventEXT = PFN_vkRegisterDeviceEventEXT;
const PFN_vkRegisterDisplayEventEXT = ?*const fn (Device, DisplayKHR, [*c]const DisplayEventInfoEXT, [*c]const AllocationCallbacks, [*c]Fence) callconv(.c) Result;
pub const PFN_registerDisplayEventEXT = PFN_vkRegisterDisplayEventEXT;
const PFN_vkGetSwapchainCounterEXT = ?*const fn (Device, SwapchainKHR, SurfaceCounterFlagBitsEXT, [*c]u64) callconv(.c) Result;
pub const PFN_getSwapchainCounterEXT = PFN_vkGetSwapchainCounterEXT;
const PFN_vkGetRefreshCycleDurationGOOGLE = ?*const fn (Device, SwapchainKHR, [*c]RefreshCycleDurationGOOGLE) callconv(.c) Result;
pub const PFN_getRefreshCycleDurationGOOGLE = PFN_vkGetRefreshCycleDurationGOOGLE;
const PFN_vkGetPastPresentationTimingGOOGLE = ?*const fn (Device, SwapchainKHR, [*c]u32, [*c]PastPresentationTimingGOOGLE) callconv(.c) Result;
pub const PFN_getPastPresentationTimingGOOGLE = PFN_vkGetPastPresentationTimingGOOGLE;
const PFN_vkCmdSetDiscardRectangleEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const Rect2D) callconv(.c) void;
pub const PFN_cmdSetDiscardRectangleEXT = PFN_vkCmdSetDiscardRectangleEXT;
const PFN_vkCmdSetDiscardRectangleEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDiscardRectangleEnableEXT = PFN_vkCmdSetDiscardRectangleEnableEXT;
const PFN_vkCmdSetDiscardRectangleModeEXT = ?*const fn (CommandBuffer, DiscardRectangleModeEXT) callconv(.c) void;
pub const PFN_cmdSetDiscardRectangleModeEXT = PFN_vkCmdSetDiscardRectangleModeEXT;
const PFN_vkSetHdrMetadataEXT = ?*const fn (Device, u32, [*c]const SwapchainKHR, [*c]const HdrMetadataEXT) callconv(.c) void;
pub const PFN_setHdrMetadataEXT = PFN_vkSetHdrMetadataEXT;
const PFN_vkDebugUtilsMessengerCallbackEXT = ?*const fn (DebugUtilsMessageSeverityFlagBitsEXT, DebugUtilsMessageTypeFlagsEXT, [*c]const DebugUtilsMessengerCallbackDataEXT, ?*anyopaque) callconv(.c) Bool32;
pub const PFN_debugUtilsMessengerCallbackEXT = PFN_vkDebugUtilsMessengerCallbackEXT;
const PFN_vkSetDebugUtilsObjectNameEXT = ?*const fn (Device, [*c]const DebugUtilsObjectNameInfoEXT) callconv(.c) Result;
pub const PFN_setDebugUtilsObjectNameEXT = PFN_vkSetDebugUtilsObjectNameEXT;
const PFN_vkSetDebugUtilsObjectTagEXT = ?*const fn (Device, [*c]const DebugUtilsObjectTagInfoEXT) callconv(.c) Result;
pub const PFN_setDebugUtilsObjectTagEXT = PFN_vkSetDebugUtilsObjectTagEXT;
const PFN_vkQueueBeginDebugUtilsLabelEXT = ?*const fn (Queue, [*c]const DebugUtilsLabelEXT) callconv(.c) void;
pub const PFN_queueBeginDebugUtilsLabelEXT = PFN_vkQueueBeginDebugUtilsLabelEXT;
const PFN_vkQueueEndDebugUtilsLabelEXT = ?*const fn (Queue) callconv(.c) void;
pub const PFN_queueEndDebugUtilsLabelEXT = PFN_vkQueueEndDebugUtilsLabelEXT;
const PFN_vkQueueInsertDebugUtilsLabelEXT = ?*const fn (Queue, [*c]const DebugUtilsLabelEXT) callconv(.c) void;
pub const PFN_queueInsertDebugUtilsLabelEXT = PFN_vkQueueInsertDebugUtilsLabelEXT;
const PFN_vkCmdBeginDebugUtilsLabelEXT = ?*const fn (CommandBuffer, [*c]const DebugUtilsLabelEXT) callconv(.c) void;
pub const PFN_cmdBeginDebugUtilsLabelEXT = PFN_vkCmdBeginDebugUtilsLabelEXT;
const PFN_vkCmdEndDebugUtilsLabelEXT = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdEndDebugUtilsLabelEXT = PFN_vkCmdEndDebugUtilsLabelEXT;
const PFN_vkCmdInsertDebugUtilsLabelEXT = ?*const fn (CommandBuffer, [*c]const DebugUtilsLabelEXT) callconv(.c) void;
pub const PFN_cmdInsertDebugUtilsLabelEXT = PFN_vkCmdInsertDebugUtilsLabelEXT;
const PFN_vkCreateDebugUtilsMessengerEXT = ?*const fn (Instance, [*c]const DebugUtilsMessengerCreateInfoEXT, [*c]const AllocationCallbacks, [*c]DebugUtilsMessengerEXT) callconv(.c) Result;
pub const PFN_createDebugUtilsMessengerEXT = PFN_vkCreateDebugUtilsMessengerEXT;
const PFN_vkDestroyDebugUtilsMessengerEXT = ?*const fn (Instance, DebugUtilsMessengerEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDebugUtilsMessengerEXT = PFN_vkDestroyDebugUtilsMessengerEXT;
const PFN_vkSubmitDebugUtilsMessageEXT = ?*const fn (Instance, DebugUtilsMessageSeverityFlagBitsEXT, DebugUtilsMessageTypeFlagsEXT, [*c]const DebugUtilsMessengerCallbackDataEXT) callconv(.c) void;
pub const PFN_submitDebugUtilsMessageEXT = PFN_vkSubmitDebugUtilsMessageEXT;
const PFN_vkCmdSetSampleLocationsEXT = ?*const fn (CommandBuffer, [*c]const SampleLocationsInfoEXT) callconv(.c) void;
pub const PFN_cmdSetSampleLocationsEXT = PFN_vkCmdSetSampleLocationsEXT;
const PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT = ?*const fn (PhysicalDevice, SampleCountFlagBits, [*c]MultisamplePropertiesEXT) callconv(.c) void;
pub const PFN_getPhysicalDeviceMultisamplePropertiesEXT = PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT;
const PFN_vkGetImageDrmFormatModifierPropertiesEXT = ?*const fn (Device, Image, [*c]ImageDrmFormatModifierPropertiesEXT) callconv(.c) Result;
pub const PFN_getImageDrmFormatModifierPropertiesEXT = PFN_vkGetImageDrmFormatModifierPropertiesEXT;
const PFN_vkCreateValidationCacheEXT = ?*const fn (Device, [*c]const ValidationCacheCreateInfoEXT, [*c]const AllocationCallbacks, [*c]ValidationCacheEXT) callconv(.c) Result;
pub const PFN_createValidationCacheEXT = PFN_vkCreateValidationCacheEXT;
const PFN_vkDestroyValidationCacheEXT = ?*const fn (Device, ValidationCacheEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyValidationCacheEXT = PFN_vkDestroyValidationCacheEXT;
const PFN_vkMergeValidationCachesEXT = ?*const fn (Device, ValidationCacheEXT, u32, [*c]const ValidationCacheEXT) callconv(.c) Result;
pub const PFN_mergeValidationCachesEXT = PFN_vkMergeValidationCachesEXT;
const PFN_vkGetValidationCacheDataEXT = ?*const fn (Device, ValidationCacheEXT, [*c]usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getValidationCacheDataEXT = PFN_vkGetValidationCacheDataEXT;
const PFN_vkCmdBindShadingRateImageNV = ?*const fn (CommandBuffer, ImageView, ImageLayout) callconv(.c) void;
pub const PFN_cmdBindShadingRateImageNV = PFN_vkCmdBindShadingRateImageNV;
const PFN_vkCmdSetViewportShadingRatePaletteNV = ?*const fn (CommandBuffer, u32, u32, [*c]const ShadingRatePaletteNV) callconv(.c) void;
pub const PFN_cmdSetViewportShadingRatePaletteNV = PFN_vkCmdSetViewportShadingRatePaletteNV;
const PFN_vkCmdSetCoarseSampleOrderNV = ?*const fn (CommandBuffer, CoarseSampleOrderTypeNV, u32, [*c]const CoarseSampleOrderCustomNV) callconv(.c) void;
pub const PFN_cmdSetCoarseSampleOrderNV = PFN_vkCmdSetCoarseSampleOrderNV;
const PFN_vkCreateAccelerationStructureNV = ?*const fn (Device, [*c]const AccelerationStructureCreateInfoNV, [*c]const AllocationCallbacks, [*c]AccelerationStructureNV) callconv(.c) Result;
pub const PFN_createAccelerationStructureNV = PFN_vkCreateAccelerationStructureNV;
const PFN_vkDestroyAccelerationStructureNV = ?*const fn (Device, AccelerationStructureNV, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyAccelerationStructureNV = PFN_vkDestroyAccelerationStructureNV;
const PFN_vkGetAccelerationStructureMemoryRequirementsNV = ?*const fn (Device, [*c]const AccelerationStructureMemoryRequirementsInfoNV, [*c]MemoryRequirements2KHR) callconv(.c) void;
pub const PFN_getAccelerationStructureMemoryRequirementsNV = PFN_vkGetAccelerationStructureMemoryRequirementsNV;
const PFN_vkBindAccelerationStructureMemoryNV = ?*const fn (Device, u32, [*c]const BindAccelerationStructureMemoryInfoNV) callconv(.c) Result;
pub const PFN_bindAccelerationStructureMemoryNV = PFN_vkBindAccelerationStructureMemoryNV;
const PFN_vkCmdBuildAccelerationStructureNV = ?*const fn (CommandBuffer, [*c]const AccelerationStructureInfoNV, Buffer, DeviceSize, Bool32, AccelerationStructureNV, AccelerationStructureNV, Buffer, DeviceSize) callconv(.c) void;
pub const PFN_cmdBuildAccelerationStructureNV = PFN_vkCmdBuildAccelerationStructureNV;
const PFN_vkCmdCopyAccelerationStructureNV = ?*const fn (CommandBuffer, AccelerationStructureNV, AccelerationStructureNV, CopyAccelerationStructureModeKHR) callconv(.c) void;
pub const PFN_cmdCopyAccelerationStructureNV = PFN_vkCmdCopyAccelerationStructureNV;
const PFN_vkCmdTraceRaysNV = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, DeviceSize, Buffer, DeviceSize, DeviceSize, Buffer, DeviceSize, DeviceSize, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdTraceRaysNV = PFN_vkCmdTraceRaysNV;
const PFN_vkCreateRayTracingPipelinesNV = ?*const fn (Device, PipelineCache, u32, [*c]const RayTracingPipelineCreateInfoNV, [*c]const AllocationCallbacks, [*c]Pipeline) callconv(.c) Result;
pub const PFN_createRayTracingPipelinesNV = PFN_vkCreateRayTracingPipelinesNV;
const PFN_vkGetRayTracingShaderGroupHandlesKHR = ?*const fn (Device, Pipeline, u32, u32, usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getRayTracingShaderGroupHandlesKHR = PFN_vkGetRayTracingShaderGroupHandlesKHR;
const PFN_vkGetRayTracingShaderGroupHandlesNV = ?*const fn (Device, Pipeline, u32, u32, usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getRayTracingShaderGroupHandlesNV = PFN_vkGetRayTracingShaderGroupHandlesNV;
const PFN_vkGetAccelerationStructureHandleNV = ?*const fn (Device, AccelerationStructureNV, usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getAccelerationStructureHandleNV = PFN_vkGetAccelerationStructureHandleNV;
const PFN_vkCmdWriteAccelerationStructuresPropertiesNV = ?*const fn (CommandBuffer, u32, [*c]const AccelerationStructureNV, QueryType, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdWriteAccelerationStructuresPropertiesNV = PFN_vkCmdWriteAccelerationStructuresPropertiesNV;
const PFN_vkCompileDeferredNV = ?*const fn (Device, Pipeline, u32) callconv(.c) Result;
pub const PFN_compileDeferredNV = PFN_vkCompileDeferredNV;
const PFN_vkGetMemoryHostPointerPropertiesEXT = ?*const fn (Device, ExternalMemoryHandleTypeFlagBits, ?*const anyopaque, [*c]MemoryHostPointerPropertiesEXT) callconv(.c) Result;
pub const PFN_getMemoryHostPointerPropertiesEXT = PFN_vkGetMemoryHostPointerPropertiesEXT;
const PFN_vkCmdWriteBufferMarkerAMD = ?*const fn (CommandBuffer, PipelineStageFlagBits, Buffer, DeviceSize, u32) callconv(.c) void;
pub const PFN_cmdWriteBufferMarkerAMD = PFN_vkCmdWriteBufferMarkerAMD;
const PFN_vkCmdWriteBufferMarker2AMD = ?*const fn (CommandBuffer, PipelineStageFlags2, Buffer, DeviceSize, u32) callconv(.c) void;
pub const PFN_cmdWriteBufferMarker2AMD = PFN_vkCmdWriteBufferMarker2AMD;
const PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = ?*const fn (PhysicalDevice, [*c]u32, [*c]TimeDomainKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceCalibrateableTimeDomainsEXT = PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT;
const PFN_vkGetCalibratedTimestampsEXT = ?*const fn (Device, u32, [*c]const CalibratedTimestampInfoKHR, [*c]u64, [*c]u64) callconv(.c) Result;
pub const PFN_getCalibratedTimestampsEXT = PFN_vkGetCalibratedTimestampsEXT;
const PFN_vkCmdDrawMeshTasksNV = ?*const fn (CommandBuffer, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMeshTasksNV = PFN_vkCmdDrawMeshTasksNV;
const PFN_vkCmdDrawMeshTasksIndirectNV = ?*const fn (CommandBuffer, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMeshTasksIndirectNV = PFN_vkCmdDrawMeshTasksIndirectNV;
const PFN_vkCmdDrawMeshTasksIndirectCountNV = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMeshTasksIndirectCountNV = PFN_vkCmdDrawMeshTasksIndirectCountNV;
const PFN_vkCmdSetExclusiveScissorEnableNV = ?*const fn (CommandBuffer, u32, u32, [*c]const Bool32) callconv(.c) void;
pub const PFN_cmdSetExclusiveScissorEnableNV = PFN_vkCmdSetExclusiveScissorEnableNV;
const PFN_vkCmdSetExclusiveScissorNV = ?*const fn (CommandBuffer, u32, u32, [*c]const Rect2D) callconv(.c) void;
pub const PFN_cmdSetExclusiveScissorNV = PFN_vkCmdSetExclusiveScissorNV;
const PFN_vkCmdSetCheckpointNV = ?*const fn (CommandBuffer, ?*const anyopaque) callconv(.c) void;
pub const PFN_cmdSetCheckpointNV = PFN_vkCmdSetCheckpointNV;
const PFN_vkGetQueueCheckpointDataNV = ?*const fn (Queue, [*c]u32, [*c]CheckpointDataNV) callconv(.c) void;
pub const PFN_getQueueCheckpointDataNV = PFN_vkGetQueueCheckpointDataNV;
const PFN_vkGetQueueCheckpointData2NV = ?*const fn (Queue, [*c]u32, [*c]CheckpointData2NV) callconv(.c) void;
pub const PFN_getQueueCheckpointData2NV = PFN_vkGetQueueCheckpointData2NV;
const PFN_vkInitializePerformanceApiINTEL = ?*const fn (Device, [*c]const InitializePerformanceApiInfoINTEL) callconv(.c) Result;
pub const PFN_initializePerformanceApiINTEL = PFN_vkInitializePerformanceApiINTEL;
const PFN_vkUninitializePerformanceApiINTEL = ?*const fn (Device) callconv(.c) void;
pub const PFN_uninitializePerformanceApiINTEL = PFN_vkUninitializePerformanceApiINTEL;
const PFN_vkCmdSetPerformanceMarkerINTEL = ?*const fn (CommandBuffer, [*c]const PerformanceMarkerInfoINTEL) callconv(.c) Result;
pub const PFN_cmdSetPerformanceMarkerINTEL = PFN_vkCmdSetPerformanceMarkerINTEL;
const PFN_vkCmdSetPerformanceStreamMarkerINTEL = ?*const fn (CommandBuffer, [*c]const PerformanceStreamMarkerInfoINTEL) callconv(.c) Result;
pub const PFN_cmdSetPerformanceStreamMarkerINTEL = PFN_vkCmdSetPerformanceStreamMarkerINTEL;
const PFN_vkCmdSetPerformanceOverrideINTEL = ?*const fn (CommandBuffer, [*c]const PerformanceOverrideInfoINTEL) callconv(.c) Result;
pub const PFN_cmdSetPerformanceOverrideINTEL = PFN_vkCmdSetPerformanceOverrideINTEL;
const PFN_vkAcquirePerformanceConfigurationINTEL = ?*const fn (Device, [*c]const PerformanceConfigurationAcquireInfoINTEL, [*c]PerformanceConfigurationINTEL) callconv(.c) Result;
pub const PFN_acquirePerformanceConfigurationINTEL = PFN_vkAcquirePerformanceConfigurationINTEL;
const PFN_vkReleasePerformanceConfigurationINTEL = ?*const fn (Device, PerformanceConfigurationINTEL) callconv(.c) Result;
pub const PFN_releasePerformanceConfigurationINTEL = PFN_vkReleasePerformanceConfigurationINTEL;
const PFN_vkQueueSetPerformanceConfigurationINTEL = ?*const fn (Queue, PerformanceConfigurationINTEL) callconv(.c) Result;
pub const PFN_queueSetPerformanceConfigurationINTEL = PFN_vkQueueSetPerformanceConfigurationINTEL;
const PFN_vkGetPerformanceParameterINTEL = ?*const fn (Device, PerformanceParameterTypeINTEL, [*c]PerformanceValueINTEL) callconv(.c) Result;
pub const PFN_getPerformanceParameterINTEL = PFN_vkGetPerformanceParameterINTEL;
const PFN_vkSetLocalDimmingAMD = ?*const fn (Device, SwapchainKHR, Bool32) callconv(.c) void;
pub const PFN_setLocalDimmingAMD = PFN_vkSetLocalDimmingAMD;
const PFN_vkGetBufferDeviceAddressEXT = ?*const fn (Device, [*c]const BufferDeviceAddressInfo) callconv(.c) DeviceAddress;
pub const PFN_getBufferDeviceAddressEXT = PFN_vkGetBufferDeviceAddressEXT;
const PFN_vkGetPhysicalDeviceToolPropertiesEXT = ?*const fn (PhysicalDevice, [*c]u32, [*c]PhysicalDeviceToolProperties) callconv(.c) Result;
pub const PFN_getPhysicalDeviceToolPropertiesEXT = PFN_vkGetPhysicalDeviceToolPropertiesEXT;
const PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = ?*const fn (PhysicalDevice, [*c]u32, [*c]CooperativeMatrixPropertiesNV) callconv(.c) Result;
pub const PFN_getPhysicalDeviceCooperativeMatrixPropertiesNV = PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV;
const PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = ?*const fn (PhysicalDevice, [*c]u32, [*c]FramebufferMixedSamplesCombinationNV) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV;
const PFN_vkCreateHeadlessSurfaceEXT = ?*const fn (Instance, [*c]const HeadlessSurfaceCreateInfoEXT, [*c]const AllocationCallbacks, [*c]SurfaceKHR) callconv(.c) Result;
pub const PFN_createHeadlessSurfaceEXT = PFN_vkCreateHeadlessSurfaceEXT;
const PFN_vkCmdSetLineStippleEXT = ?*const fn (CommandBuffer, u32, u16) callconv(.c) void;
pub const PFN_cmdSetLineStippleEXT = PFN_vkCmdSetLineStippleEXT;
const PFN_vkResetQueryPoolEXT = ?*const fn (Device, QueryPool, u32, u32) callconv(.c) void;
pub const PFN_resetQueryPoolEXT = PFN_vkResetQueryPoolEXT;
const PFN_vkCmdSetCullModeEXT = ?*const fn (CommandBuffer, CullModeFlags) callconv(.c) void;
pub const PFN_cmdSetCullModeEXT = PFN_vkCmdSetCullModeEXT;
const PFN_vkCmdSetFrontFaceEXT = ?*const fn (CommandBuffer, FrontFace) callconv(.c) void;
pub const PFN_cmdSetFrontFaceEXT = PFN_vkCmdSetFrontFaceEXT;
const PFN_vkCmdSetPrimitiveTopologyEXT = ?*const fn (CommandBuffer, PrimitiveTopology) callconv(.c) void;
pub const PFN_cmdSetPrimitiveTopologyEXT = PFN_vkCmdSetPrimitiveTopologyEXT;
const PFN_vkCmdSetViewportWithCountEXT = ?*const fn (CommandBuffer, u32, [*c]const Viewport) callconv(.c) void;
pub const PFN_cmdSetViewportWithCountEXT = PFN_vkCmdSetViewportWithCountEXT;
const PFN_vkCmdSetScissorWithCountEXT = ?*const fn (CommandBuffer, u32, [*c]const Rect2D) callconv(.c) void;
pub const PFN_cmdSetScissorWithCountEXT = PFN_vkCmdSetScissorWithCountEXT;
const PFN_vkCmdBindVertexBuffers2EXT = ?*const fn (CommandBuffer, u32, u32, [*c]const Buffer, [*c]const DeviceSize, [*c]const DeviceSize, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdBindVertexBuffers2EXT = PFN_vkCmdBindVertexBuffers2EXT;
const PFN_vkCmdSetDepthTestEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthTestEnableEXT = PFN_vkCmdSetDepthTestEnableEXT;
const PFN_vkCmdSetDepthWriteEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthWriteEnableEXT = PFN_vkCmdSetDepthWriteEnableEXT;
const PFN_vkCmdSetDepthCompareOpEXT = ?*const fn (CommandBuffer, CompareOp) callconv(.c) void;
pub const PFN_cmdSetDepthCompareOpEXT = PFN_vkCmdSetDepthCompareOpEXT;
const PFN_vkCmdSetDepthBoundsTestEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthBoundsTestEnableEXT = PFN_vkCmdSetDepthBoundsTestEnableEXT;
const PFN_vkCmdSetStencilTestEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetStencilTestEnableEXT = PFN_vkCmdSetStencilTestEnableEXT;
const PFN_vkCmdSetStencilOpEXT = ?*const fn (CommandBuffer, StencilFaceFlags, StencilOp, StencilOp, StencilOp, CompareOp) callconv(.c) void;
pub const PFN_cmdSetStencilOpEXT = PFN_vkCmdSetStencilOpEXT;
const PFN_vkCopyMemoryToImageEXT = ?*const fn (Device, [*c]const CopyMemoryToImageInfo) callconv(.c) Result;
pub const PFN_copyMemoryToImageEXT = PFN_vkCopyMemoryToImageEXT;
const PFN_vkCopyImageToMemoryEXT = ?*const fn (Device, [*c]const CopyImageToMemoryInfo) callconv(.c) Result;
pub const PFN_copyImageToMemoryEXT = PFN_vkCopyImageToMemoryEXT;
const PFN_vkCopyImageToImageEXT = ?*const fn (Device, [*c]const CopyImageToImageInfo) callconv(.c) Result;
pub const PFN_copyImageToImageEXT = PFN_vkCopyImageToImageEXT;
const PFN_vkTransitionImageLayoutEXT = ?*const fn (Device, u32, [*c]const HostImageLayoutTransitionInfo) callconv(.c) Result;
pub const PFN_transitionImageLayoutEXT = PFN_vkTransitionImageLayoutEXT;
const PFN_vkGetImageSubresourceLayout2EXT = ?*const fn (Device, Image, [*c]const ImageSubresource2, [*c]SubresourceLayout2) callconv(.c) void;
pub const PFN_getImageSubresourceLayout2EXT = PFN_vkGetImageSubresourceLayout2EXT;
const PFN_vkReleaseSwapchainImagesEXT = ?*const fn (Device, [*c]const ReleaseSwapchainImagesInfoKHR) callconv(.c) Result;
pub const PFN_releaseSwapchainImagesEXT = PFN_vkReleaseSwapchainImagesEXT;
const PFN_vkGetGeneratedCommandsMemoryRequirementsNV = ?*const fn (Device, [*c]const GeneratedCommandsMemoryRequirementsInfoNV, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getGeneratedCommandsMemoryRequirementsNV = PFN_vkGetGeneratedCommandsMemoryRequirementsNV;
const PFN_vkCmdPreprocessGeneratedCommandsNV = ?*const fn (CommandBuffer, [*c]const GeneratedCommandsInfoNV) callconv(.c) void;
pub const PFN_cmdPreprocessGeneratedCommandsNV = PFN_vkCmdPreprocessGeneratedCommandsNV;
const PFN_vkCmdExecuteGeneratedCommandsNV = ?*const fn (CommandBuffer, Bool32, [*c]const GeneratedCommandsInfoNV) callconv(.c) void;
pub const PFN_cmdExecuteGeneratedCommandsNV = PFN_vkCmdExecuteGeneratedCommandsNV;
const PFN_vkCmdBindPipelineShaderGroupNV = ?*const fn (CommandBuffer, PipelineBindPoint, Pipeline, u32) callconv(.c) void;
pub const PFN_cmdBindPipelineShaderGroupNV = PFN_vkCmdBindPipelineShaderGroupNV;
const PFN_vkCreateIndirectCommandsLayoutNV = ?*const fn (Device, [*c]const IndirectCommandsLayoutCreateInfoNV, [*c]const AllocationCallbacks, [*c]IndirectCommandsLayoutNV) callconv(.c) Result;
pub const PFN_createIndirectCommandsLayoutNV = PFN_vkCreateIndirectCommandsLayoutNV;
const PFN_vkDestroyIndirectCommandsLayoutNV = ?*const fn (Device, IndirectCommandsLayoutNV, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyIndirectCommandsLayoutNV = PFN_vkDestroyIndirectCommandsLayoutNV;
const PFN_vkCmdSetDepthBias2EXT = ?*const fn (CommandBuffer, [*c]const DepthBiasInfoEXT) callconv(.c) void;
pub const PFN_cmdSetDepthBias2EXT = PFN_vkCmdSetDepthBias2EXT;
const PFN_vkDeviceMemoryReportCallbackEXT = ?*const fn ([*c]const DeviceMemoryReportCallbackDataEXT, ?*anyopaque) callconv(.c) void;
pub const PFN_deviceMemoryReportCallbackEXT = PFN_vkDeviceMemoryReportCallbackEXT;
const PFN_vkAcquireDrmDisplayEXT = ?*const fn (PhysicalDevice, i32, DisplayKHR) callconv(.c) Result;
pub const PFN_acquireDrmDisplayEXT = PFN_vkAcquireDrmDisplayEXT;
const PFN_vkGetDrmDisplayEXT = ?*const fn (PhysicalDevice, i32, u32, [*c]DisplayKHR) callconv(.c) Result;
pub const PFN_getDrmDisplayEXT = PFN_vkGetDrmDisplayEXT;
const PFN_vkCreatePrivateDataSlotEXT = ?*const fn (Device, [*c]const PrivateDataSlotCreateInfo, [*c]const AllocationCallbacks, [*c]PrivateDataSlot) callconv(.c) Result;
pub const PFN_createPrivateDataSlotEXT = PFN_vkCreatePrivateDataSlotEXT;
const PFN_vkDestroyPrivateDataSlotEXT = ?*const fn (Device, PrivateDataSlot, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyPrivateDataSlotEXT = PFN_vkDestroyPrivateDataSlotEXT;
const PFN_vkSetPrivateDataEXT = ?*const fn (Device, ObjectType, u64, PrivateDataSlot, u64) callconv(.c) Result;
pub const PFN_setPrivateDataEXT = PFN_vkSetPrivateDataEXT;
const PFN_vkGetPrivateDataEXT = ?*const fn (Device, ObjectType, u64, PrivateDataSlot, [*c]u64) callconv(.c) void;
pub const PFN_getPrivateDataEXT = PFN_vkGetPrivateDataEXT;
const PFN_vkCmdDispatchTileQCOM = ?*const fn (CommandBuffer, [*c]const DispatchTileInfoQCOM) callconv(.c) void;
pub const PFN_cmdDispatchTileQCOM = PFN_vkCmdDispatchTileQCOM;
const PFN_vkCmdBeginPerTileExecutionQCOM = ?*const fn (CommandBuffer, [*c]const PerTileBeginInfoQCOM) callconv(.c) void;
pub const PFN_cmdBeginPerTileExecutionQCOM = PFN_vkCmdBeginPerTileExecutionQCOM;
const PFN_vkCmdEndPerTileExecutionQCOM = ?*const fn (CommandBuffer, [*c]const PerTileEndInfoQCOM) callconv(.c) void;
pub const PFN_cmdEndPerTileExecutionQCOM = PFN_vkCmdEndPerTileExecutionQCOM;
const PFN_vkGetDescriptorSetLayoutSizeEXT = ?*const fn (Device, DescriptorSetLayout, [*c]DeviceSize) callconv(.c) void;
pub const PFN_getDescriptorSetLayoutSizeEXT = PFN_vkGetDescriptorSetLayoutSizeEXT;
const PFN_vkGetDescriptorSetLayoutBindingOffsetEXT = ?*const fn (Device, DescriptorSetLayout, u32, [*c]DeviceSize) callconv(.c) void;
pub const PFN_getDescriptorSetLayoutBindingOffsetEXT = PFN_vkGetDescriptorSetLayoutBindingOffsetEXT;
const PFN_vkGetDescriptorEXT = ?*const fn (Device, [*c]const DescriptorGetInfoEXT, usize, ?*anyopaque) callconv(.c) void;
pub const PFN_getDescriptorEXT = PFN_vkGetDescriptorEXT;
const PFN_vkCmdBindDescriptorBuffersEXT = ?*const fn (CommandBuffer, u32, [*c]const DescriptorBufferBindingInfoEXT) callconv(.c) void;
pub const PFN_cmdBindDescriptorBuffersEXT = PFN_vkCmdBindDescriptorBuffersEXT;
const PFN_vkCmdSetDescriptorBufferOffsetsEXT = ?*const fn (CommandBuffer, PipelineBindPoint, PipelineLayout, u32, u32, [*c]const u32, [*c]const DeviceSize) callconv(.c) void;
pub const PFN_cmdSetDescriptorBufferOffsetsEXT = PFN_vkCmdSetDescriptorBufferOffsetsEXT;
const PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT = ?*const fn (CommandBuffer, PipelineBindPoint, PipelineLayout, u32) callconv(.c) void;
pub const PFN_cmdBindDescriptorBufferEmbeddedSamplersEXT = PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
const PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT = ?*const fn (Device, [*c]const BufferCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.c) Result;
pub const PFN_getBufferOpaqueCaptureDescriptorDataEXT = PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT;
const PFN_vkGetImageOpaqueCaptureDescriptorDataEXT = ?*const fn (Device, [*c]const ImageCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.c) Result;
pub const PFN_getImageOpaqueCaptureDescriptorDataEXT = PFN_vkGetImageOpaqueCaptureDescriptorDataEXT;
const PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT = ?*const fn (Device, [*c]const ImageViewCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.c) Result;
pub const PFN_getImageViewOpaqueCaptureDescriptorDataEXT = PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT;
const PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT = ?*const fn (Device, [*c]const SamplerCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.c) Result;
pub const PFN_getSamplerOpaqueCaptureDescriptorDataEXT = PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT;
const PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = ?*const fn (Device, [*c]const AccelerationStructureCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.c) Result;
pub const PFN_getAccelerationStructureOpaqueCaptureDescriptorDataEXT = PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
const PFN_vkCmdSetFragmentShadingRateEnumNV = ?*const fn (CommandBuffer, FragmentShadingRateNV, [*c]const FragmentShadingRateCombinerOpKHR) callconv(.c) void;
pub const PFN_cmdSetFragmentShadingRateEnumNV = PFN_vkCmdSetFragmentShadingRateEnumNV;
const PFN_vkGetDeviceFaultInfoEXT = ?*const fn (Device, [*c]DeviceFaultCountsEXT, [*c]DeviceFaultInfoEXT) callconv(.c) Result;
pub const PFN_getDeviceFaultInfoEXT = PFN_vkGetDeviceFaultInfoEXT;
const PFN_vkCmdSetVertexInputEXT = ?*const fn (CommandBuffer, u32, [*c]const VertexInputBindingDescription2EXT, u32, [*c]const VertexInputAttributeDescription2EXT) callconv(.c) void;
pub const PFN_cmdSetVertexInputEXT = PFN_vkCmdSetVertexInputEXT;
const PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = ?*const fn (Device, RenderPass, [*c]Extent2D) callconv(.c) Result;
pub const PFN_getDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
const PFN_vkCmdSubpassShadingHUAWEI = ?*const fn (CommandBuffer) callconv(.c) void;
pub const PFN_cmdSubpassShadingHUAWEI = PFN_vkCmdSubpassShadingHUAWEI;
const PFN_vkCmdBindInvocationMaskHUAWEI = ?*const fn (CommandBuffer, ImageView, ImageLayout) callconv(.c) void;
pub const PFN_cmdBindInvocationMaskHUAWEI = PFN_vkCmdBindInvocationMaskHUAWEI;
const PFN_vkGetMemoryRemoteAddressNV = ?*const fn (Device, [*c]const MemoryGetRemoteAddressInfoNV, [*c]RemoteAddressNV) callconv(.c) Result;
pub const PFN_getMemoryRemoteAddressNV = PFN_vkGetMemoryRemoteAddressNV;
const PFN_vkGetPipelinePropertiesEXT = ?*const fn (Device, [*c]const PipelineInfoEXT, [*c]BaseOutStructure) callconv(.c) Result;
pub const PFN_getPipelinePropertiesEXT = PFN_vkGetPipelinePropertiesEXT;
const PFN_vkCmdSetPatchControlPointsEXT = ?*const fn (CommandBuffer, u32) callconv(.c) void;
pub const PFN_cmdSetPatchControlPointsEXT = PFN_vkCmdSetPatchControlPointsEXT;
const PFN_vkCmdSetRasterizerDiscardEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetRasterizerDiscardEnableEXT = PFN_vkCmdSetRasterizerDiscardEnableEXT;
const PFN_vkCmdSetDepthBiasEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthBiasEnableEXT = PFN_vkCmdSetDepthBiasEnableEXT;
const PFN_vkCmdSetLogicOpEXT = ?*const fn (CommandBuffer, LogicOp) callconv(.c) void;
pub const PFN_cmdSetLogicOpEXT = PFN_vkCmdSetLogicOpEXT;
const PFN_vkCmdSetPrimitiveRestartEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetPrimitiveRestartEnableEXT = PFN_vkCmdSetPrimitiveRestartEnableEXT;
const PFN_vkCmdSetColorWriteEnableEXT = ?*const fn (CommandBuffer, u32, [*c]const Bool32) callconv(.c) void;
pub const PFN_cmdSetColorWriteEnableEXT = PFN_vkCmdSetColorWriteEnableEXT;
const PFN_vkCmdDrawMultiEXT = ?*const fn (CommandBuffer, u32, [*c]const MultiDrawInfoEXT, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMultiEXT = PFN_vkCmdDrawMultiEXT;
const PFN_vkCmdDrawMultiIndexedEXT = ?*const fn (CommandBuffer, u32, [*c]const MultiDrawIndexedInfoEXT, u32, u32, u32, [*c]const i32) callconv(.c) void;
pub const PFN_cmdDrawMultiIndexedEXT = PFN_vkCmdDrawMultiIndexedEXT;
const PFN_vkCreateMicromapEXT = ?*const fn (Device, [*c]const MicromapCreateInfoEXT, [*c]const AllocationCallbacks, [*c]MicromapEXT) callconv(.c) Result;
pub const PFN_createMicromapEXT = PFN_vkCreateMicromapEXT;
const PFN_vkDestroyMicromapEXT = ?*const fn (Device, MicromapEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyMicromapEXT = PFN_vkDestroyMicromapEXT;
const PFN_vkCmdBuildMicromapsEXT = ?*const fn (CommandBuffer, u32, [*c]const MicromapBuildInfoEXT) callconv(.c) void;
pub const PFN_cmdBuildMicromapsEXT = PFN_vkCmdBuildMicromapsEXT;
const PFN_vkBuildMicromapsEXT = ?*const fn (Device, DeferredOperationKHR, u32, [*c]const MicromapBuildInfoEXT) callconv(.c) Result;
pub const PFN_buildMicromapsEXT = PFN_vkBuildMicromapsEXT;
const PFN_vkCopyMicromapEXT = ?*const fn (Device, DeferredOperationKHR, [*c]const CopyMicromapInfoEXT) callconv(.c) Result;
pub const PFN_copyMicromapEXT = PFN_vkCopyMicromapEXT;
const PFN_vkCopyMicromapToMemoryEXT = ?*const fn (Device, DeferredOperationKHR, [*c]const CopyMicromapToMemoryInfoEXT) callconv(.c) Result;
pub const PFN_copyMicromapToMemoryEXT = PFN_vkCopyMicromapToMemoryEXT;
const PFN_vkCopyMemoryToMicromapEXT = ?*const fn (Device, DeferredOperationKHR, [*c]const CopyMemoryToMicromapInfoEXT) callconv(.c) Result;
pub const PFN_copyMemoryToMicromapEXT = PFN_vkCopyMemoryToMicromapEXT;
const PFN_vkWriteMicromapsPropertiesEXT = ?*const fn (Device, u32, [*c]const MicromapEXT, QueryType, usize, ?*anyopaque, usize) callconv(.c) Result;
pub const PFN_writeMicromapsPropertiesEXT = PFN_vkWriteMicromapsPropertiesEXT;
const PFN_vkCmdCopyMicromapEXT = ?*const fn (CommandBuffer, [*c]const CopyMicromapInfoEXT) callconv(.c) void;
pub const PFN_cmdCopyMicromapEXT = PFN_vkCmdCopyMicromapEXT;
const PFN_vkCmdCopyMicromapToMemoryEXT = ?*const fn (CommandBuffer, [*c]const CopyMicromapToMemoryInfoEXT) callconv(.c) void;
pub const PFN_cmdCopyMicromapToMemoryEXT = PFN_vkCmdCopyMicromapToMemoryEXT;
const PFN_vkCmdCopyMemoryToMicromapEXT = ?*const fn (CommandBuffer, [*c]const CopyMemoryToMicromapInfoEXT) callconv(.c) void;
pub const PFN_cmdCopyMemoryToMicromapEXT = PFN_vkCmdCopyMemoryToMicromapEXT;
const PFN_vkCmdWriteMicromapsPropertiesEXT = ?*const fn (CommandBuffer, u32, [*c]const MicromapEXT, QueryType, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdWriteMicromapsPropertiesEXT = PFN_vkCmdWriteMicromapsPropertiesEXT;
const PFN_vkGetDeviceMicromapCompatibilityEXT = ?*const fn (Device, [*c]const MicromapVersionInfoEXT, [*c]AccelerationStructureCompatibilityKHR) callconv(.c) void;
pub const PFN_getDeviceMicromapCompatibilityEXT = PFN_vkGetDeviceMicromapCompatibilityEXT;
const PFN_vkGetMicromapBuildSizesEXT = ?*const fn (Device, AccelerationStructureBuildTypeKHR, [*c]const MicromapBuildInfoEXT, [*c]MicromapBuildSizesInfoEXT) callconv(.c) void;
pub const PFN_getMicromapBuildSizesEXT = PFN_vkGetMicromapBuildSizesEXT;
const PFN_vkCmdDrawClusterHUAWEI = ?*const fn (CommandBuffer, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawClusterHUAWEI = PFN_vkCmdDrawClusterHUAWEI;
const PFN_vkCmdDrawClusterIndirectHUAWEI = ?*const fn (CommandBuffer, Buffer, DeviceSize) callconv(.c) void;
pub const PFN_cmdDrawClusterIndirectHUAWEI = PFN_vkCmdDrawClusterIndirectHUAWEI;
const PFN_vkSetDeviceMemoryPriorityEXT = ?*const fn (Device, DeviceMemory, f32) callconv(.c) void;
pub const PFN_setDeviceMemoryPriorityEXT = PFN_vkSetDeviceMemoryPriorityEXT;
const PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE = ?*const fn (Device, [*c]const DescriptorSetBindingReferenceVALVE, [*c]DescriptorSetLayoutHostMappingInfoVALVE) callconv(.c) void;
pub const PFN_getDescriptorSetLayoutHostMappingInfoVALVE = PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE;
const PFN_vkGetDescriptorSetHostMappingVALVE = ?*const fn (Device, DescriptorSet, [*c]?*anyopaque) callconv(.c) void;
pub const PFN_getDescriptorSetHostMappingVALVE = PFN_vkGetDescriptorSetHostMappingVALVE;
const PFN_vkCmdCopyMemoryIndirectNV = ?*const fn (CommandBuffer, DeviceAddress, u32, u32) callconv(.c) void;
pub const PFN_cmdCopyMemoryIndirectNV = PFN_vkCmdCopyMemoryIndirectNV;
const PFN_vkCmdCopyMemoryToImageIndirectNV = ?*const fn (CommandBuffer, DeviceAddress, u32, u32, Image, ImageLayout, [*c]const ImageSubresourceLayers) callconv(.c) void;
pub const PFN_cmdCopyMemoryToImageIndirectNV = PFN_vkCmdCopyMemoryToImageIndirectNV;
const PFN_vkCmdDecompressMemoryNV = ?*const fn (CommandBuffer, u32, [*c]const DecompressMemoryRegionNV) callconv(.c) void;
pub const PFN_cmdDecompressMemoryNV = PFN_vkCmdDecompressMemoryNV;
const PFN_vkCmdDecompressMemoryIndirectCountNV = ?*const fn (CommandBuffer, DeviceAddress, DeviceAddress, u32) callconv(.c) void;
pub const PFN_cmdDecompressMemoryIndirectCountNV = PFN_vkCmdDecompressMemoryIndirectCountNV;
const PFN_vkGetPipelineIndirectMemoryRequirementsNV = ?*const fn (Device, [*c]const ComputePipelineCreateInfo, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getPipelineIndirectMemoryRequirementsNV = PFN_vkGetPipelineIndirectMemoryRequirementsNV;
const PFN_vkCmdUpdatePipelineIndirectBufferNV = ?*const fn (CommandBuffer, PipelineBindPoint, Pipeline) callconv(.c) void;
pub const PFN_cmdUpdatePipelineIndirectBufferNV = PFN_vkCmdUpdatePipelineIndirectBufferNV;
const PFN_vkGetPipelineIndirectDeviceAddressNV = ?*const fn (Device, [*c]const PipelineIndirectDeviceAddressInfoNV) callconv(.c) DeviceAddress;
pub const PFN_getPipelineIndirectDeviceAddressNV = PFN_vkGetPipelineIndirectDeviceAddressNV;
const PFN_vkCmdSetDepthClampEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthClampEnableEXT = PFN_vkCmdSetDepthClampEnableEXT;
const PFN_vkCmdSetPolygonModeEXT = ?*const fn (CommandBuffer, PolygonMode) callconv(.c) void;
pub const PFN_cmdSetPolygonModeEXT = PFN_vkCmdSetPolygonModeEXT;
const PFN_vkCmdSetRasterizationSamplesEXT = ?*const fn (CommandBuffer, SampleCountFlagBits) callconv(.c) void;
pub const PFN_cmdSetRasterizationSamplesEXT = PFN_vkCmdSetRasterizationSamplesEXT;
const PFN_vkCmdSetSampleMaskEXT = ?*const fn (CommandBuffer, SampleCountFlagBits, [*c]const SampleMask) callconv(.c) void;
pub const PFN_cmdSetSampleMaskEXT = PFN_vkCmdSetSampleMaskEXT;
const PFN_vkCmdSetAlphaToCoverageEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetAlphaToCoverageEnableEXT = PFN_vkCmdSetAlphaToCoverageEnableEXT;
const PFN_vkCmdSetAlphaToOneEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetAlphaToOneEnableEXT = PFN_vkCmdSetAlphaToOneEnableEXT;
const PFN_vkCmdSetLogicOpEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetLogicOpEnableEXT = PFN_vkCmdSetLogicOpEnableEXT;
const PFN_vkCmdSetColorBlendEnableEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const Bool32) callconv(.c) void;
pub const PFN_cmdSetColorBlendEnableEXT = PFN_vkCmdSetColorBlendEnableEXT;
const PFN_vkCmdSetColorBlendEquationEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const ColorBlendEquationEXT) callconv(.c) void;
pub const PFN_cmdSetColorBlendEquationEXT = PFN_vkCmdSetColorBlendEquationEXT;
const PFN_vkCmdSetColorWriteMaskEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const ColorComponentFlags) callconv(.c) void;
pub const PFN_cmdSetColorWriteMaskEXT = PFN_vkCmdSetColorWriteMaskEXT;
const PFN_vkCmdSetTessellationDomainOriginEXT = ?*const fn (CommandBuffer, TessellationDomainOrigin) callconv(.c) void;
pub const PFN_cmdSetTessellationDomainOriginEXT = PFN_vkCmdSetTessellationDomainOriginEXT;
const PFN_vkCmdSetRasterizationStreamEXT = ?*const fn (CommandBuffer, u32) callconv(.c) void;
pub const PFN_cmdSetRasterizationStreamEXT = PFN_vkCmdSetRasterizationStreamEXT;
const PFN_vkCmdSetConservativeRasterizationModeEXT = ?*const fn (CommandBuffer, ConservativeRasterizationModeEXT) callconv(.c) void;
pub const PFN_cmdSetConservativeRasterizationModeEXT = PFN_vkCmdSetConservativeRasterizationModeEXT;
const PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT = ?*const fn (CommandBuffer, f32) callconv(.c) void;
pub const PFN_cmdSetExtraPrimitiveOverestimationSizeEXT = PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT;
const PFN_vkCmdSetDepthClipEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthClipEnableEXT = PFN_vkCmdSetDepthClipEnableEXT;
const PFN_vkCmdSetSampleLocationsEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetSampleLocationsEnableEXT = PFN_vkCmdSetSampleLocationsEnableEXT;
const PFN_vkCmdSetColorBlendAdvancedEXT = ?*const fn (CommandBuffer, u32, u32, [*c]const ColorBlendAdvancedEXT) callconv(.c) void;
pub const PFN_cmdSetColorBlendAdvancedEXT = PFN_vkCmdSetColorBlendAdvancedEXT;
const PFN_vkCmdSetProvokingVertexModeEXT = ?*const fn (CommandBuffer, ProvokingVertexModeEXT) callconv(.c) void;
pub const PFN_cmdSetProvokingVertexModeEXT = PFN_vkCmdSetProvokingVertexModeEXT;
const PFN_vkCmdSetLineRasterizationModeEXT = ?*const fn (CommandBuffer, LineRasterizationModeEXT) callconv(.c) void;
pub const PFN_cmdSetLineRasterizationModeEXT = PFN_vkCmdSetLineRasterizationModeEXT;
const PFN_vkCmdSetLineStippleEnableEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetLineStippleEnableEXT = PFN_vkCmdSetLineStippleEnableEXT;
const PFN_vkCmdSetDepthClipNegativeOneToOneEXT = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetDepthClipNegativeOneToOneEXT = PFN_vkCmdSetDepthClipNegativeOneToOneEXT;
const PFN_vkCmdSetViewportWScalingEnableNV = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetViewportWScalingEnableNV = PFN_vkCmdSetViewportWScalingEnableNV;
const PFN_vkCmdSetViewportSwizzleNV = ?*const fn (CommandBuffer, u32, u32, [*c]const ViewportSwizzleNV) callconv(.c) void;
pub const PFN_cmdSetViewportSwizzleNV = PFN_vkCmdSetViewportSwizzleNV;
const PFN_vkCmdSetCoverageToColorEnableNV = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetCoverageToColorEnableNV = PFN_vkCmdSetCoverageToColorEnableNV;
const PFN_vkCmdSetCoverageToColorLocationNV = ?*const fn (CommandBuffer, u32) callconv(.c) void;
pub const PFN_cmdSetCoverageToColorLocationNV = PFN_vkCmdSetCoverageToColorLocationNV;
const PFN_vkCmdSetCoverageModulationModeNV = ?*const fn (CommandBuffer, CoverageModulationModeNV) callconv(.c) void;
pub const PFN_cmdSetCoverageModulationModeNV = PFN_vkCmdSetCoverageModulationModeNV;
const PFN_vkCmdSetCoverageModulationTableEnableNV = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetCoverageModulationTableEnableNV = PFN_vkCmdSetCoverageModulationTableEnableNV;
const PFN_vkCmdSetCoverageModulationTableNV = ?*const fn (CommandBuffer, u32, [*c]const f32) callconv(.c) void;
pub const PFN_cmdSetCoverageModulationTableNV = PFN_vkCmdSetCoverageModulationTableNV;
const PFN_vkCmdSetShadingRateImageEnableNV = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetShadingRateImageEnableNV = PFN_vkCmdSetShadingRateImageEnableNV;
const PFN_vkCmdSetRepresentativeFragmentTestEnableNV = ?*const fn (CommandBuffer, Bool32) callconv(.c) void;
pub const PFN_cmdSetRepresentativeFragmentTestEnableNV = PFN_vkCmdSetRepresentativeFragmentTestEnableNV;
const PFN_vkCmdSetCoverageReductionModeNV = ?*const fn (CommandBuffer, CoverageReductionModeNV) callconv(.c) void;
pub const PFN_cmdSetCoverageReductionModeNV = PFN_vkCmdSetCoverageReductionModeNV;
const PFN_vkGetInstanceProcAddrLUNARG = ?*const fn (Instance, [*c]const u8) callconv(.c) PFN_vkVoidFunction;
pub const PFN_getInstanceProcAddrLUNARG = PFN_vkGetInstanceProcAddrLUNARG;
const PFN_vkCreateTensorARM = ?*const fn (Device, [*c]const TensorCreateInfoARM, [*c]const AllocationCallbacks, [*c]TensorARM) callconv(.c) Result;
pub const PFN_createTensorARM = PFN_vkCreateTensorARM;
const PFN_vkDestroyTensorARM = ?*const fn (Device, TensorARM, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyTensorARM = PFN_vkDestroyTensorARM;
const PFN_vkCreateTensorViewARM = ?*const fn (Device, [*c]const TensorViewCreateInfoARM, [*c]const AllocationCallbacks, [*c]TensorViewARM) callconv(.c) Result;
pub const PFN_createTensorViewARM = PFN_vkCreateTensorViewARM;
const PFN_vkDestroyTensorViewARM = ?*const fn (Device, TensorViewARM, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyTensorViewARM = PFN_vkDestroyTensorViewARM;
const PFN_vkGetTensorMemoryRequirementsARM = ?*const fn (Device, [*c]const TensorMemoryRequirementsInfoARM, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getTensorMemoryRequirementsARM = PFN_vkGetTensorMemoryRequirementsARM;
const PFN_vkBindTensorMemoryARM = ?*const fn (Device, u32, [*c]const BindTensorMemoryInfoARM) callconv(.c) Result;
pub const PFN_bindTensorMemoryARM = PFN_vkBindTensorMemoryARM;
const PFN_vkGetDeviceTensorMemoryRequirementsARM = ?*const fn (Device, [*c]const DeviceTensorMemoryRequirementsARM, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getDeviceTensorMemoryRequirementsARM = PFN_vkGetDeviceTensorMemoryRequirementsARM;
const PFN_vkCmdCopyTensorARM = ?*const fn (CommandBuffer, [*c]const CopyTensorInfoARM) callconv(.c) void;
pub const PFN_cmdCopyTensorARM = PFN_vkCmdCopyTensorARM;
const PFN_vkGetPhysicalDeviceExternalTensorPropertiesARM = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceExternalTensorInfoARM, [*c]ExternalTensorPropertiesARM) callconv(.c) void;
pub const PFN_getPhysicalDeviceExternalTensorPropertiesARM = PFN_vkGetPhysicalDeviceExternalTensorPropertiesARM;
const PFN_vkGetTensorOpaqueCaptureDescriptorDataARM = ?*const fn (Device, [*c]const TensorCaptureDescriptorDataInfoARM, ?*anyopaque) callconv(.c) Result;
pub const PFN_getTensorOpaqueCaptureDescriptorDataARM = PFN_vkGetTensorOpaqueCaptureDescriptorDataARM;
const PFN_vkGetTensorViewOpaqueCaptureDescriptorDataARM = ?*const fn (Device, [*c]const TensorViewCaptureDescriptorDataInfoARM, ?*anyopaque) callconv(.c) Result;
pub const PFN_getTensorViewOpaqueCaptureDescriptorDataARM = PFN_vkGetTensorViewOpaqueCaptureDescriptorDataARM;
const PFN_vkGetShaderModuleIdentifierEXT = ?*const fn (Device, ShaderModule, [*c]ShaderModuleIdentifierEXT) callconv(.c) void;
pub const PFN_getShaderModuleIdentifierEXT = PFN_vkGetShaderModuleIdentifierEXT;
const PFN_vkGetShaderModuleCreateInfoIdentifierEXT = ?*const fn (Device, [*c]const ShaderModuleCreateInfo, [*c]ShaderModuleIdentifierEXT) callconv(.c) void;
pub const PFN_getShaderModuleCreateInfoIdentifierEXT = PFN_vkGetShaderModuleCreateInfoIdentifierEXT;
const PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV = ?*const fn (PhysicalDevice, [*c]const OpticalFlowImageFormatInfoNV, [*c]u32, [*c]OpticalFlowImageFormatPropertiesNV) callconv(.c) Result;
pub const PFN_getPhysicalDeviceOpticalFlowImageFormatsNV = PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV;
const PFN_vkCreateOpticalFlowSessionNV = ?*const fn (Device, [*c]const OpticalFlowSessionCreateInfoNV, [*c]const AllocationCallbacks, [*c]OpticalFlowSessionNV) callconv(.c) Result;
pub const PFN_createOpticalFlowSessionNV = PFN_vkCreateOpticalFlowSessionNV;
const PFN_vkDestroyOpticalFlowSessionNV = ?*const fn (Device, OpticalFlowSessionNV, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyOpticalFlowSessionNV = PFN_vkDestroyOpticalFlowSessionNV;
const PFN_vkBindOpticalFlowSessionImageNV = ?*const fn (Device, OpticalFlowSessionNV, OpticalFlowSessionBindingPointNV, ImageView, ImageLayout) callconv(.c) Result;
pub const PFN_bindOpticalFlowSessionImageNV = PFN_vkBindOpticalFlowSessionImageNV;
const PFN_vkCmdOpticalFlowExecuteNV = ?*const fn (CommandBuffer, OpticalFlowSessionNV, [*c]const OpticalFlowExecuteInfoNV) callconv(.c) void;
pub const PFN_cmdOpticalFlowExecuteNV = PFN_vkCmdOpticalFlowExecuteNV;
const PFN_vkAntiLagUpdateAMD = ?*const fn (Device, [*c]const AntiLagDataAMD) callconv(.c) void;
pub const PFN_antiLagUpdateAMD = PFN_vkAntiLagUpdateAMD;
const PFN_vkCreateShadersEXT = ?*const fn (Device, u32, [*c]const ShaderCreateInfoEXT, [*c]const AllocationCallbacks, [*c]ShaderEXT) callconv(.c) Result;
pub const PFN_createShadersEXT = PFN_vkCreateShadersEXT;
const PFN_vkDestroyShaderEXT = ?*const fn (Device, ShaderEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyShaderEXT = PFN_vkDestroyShaderEXT;
const PFN_vkGetShaderBinaryDataEXT = ?*const fn (Device, ShaderEXT, [*c]usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getShaderBinaryDataEXT = PFN_vkGetShaderBinaryDataEXT;
const PFN_vkCmdBindShadersEXT = ?*const fn (CommandBuffer, u32, [*c]const ShaderStageFlagBits, [*c]const ShaderEXT) callconv(.c) void;
pub const PFN_cmdBindShadersEXT = PFN_vkCmdBindShadersEXT;
const PFN_vkCmdSetDepthClampRangeEXT = ?*const fn (CommandBuffer, DepthClampModeEXT, [*c]const DepthClampRangeEXT) callconv(.c) void;
pub const PFN_cmdSetDepthClampRangeEXT = PFN_vkCmdSetDepthClampRangeEXT;
const PFN_vkGetFramebufferTilePropertiesQCOM = ?*const fn (Device, Framebuffer, [*c]u32, [*c]TilePropertiesQCOM) callconv(.c) Result;
pub const PFN_getFramebufferTilePropertiesQCOM = PFN_vkGetFramebufferTilePropertiesQCOM;
const PFN_vkGetDynamicRenderingTilePropertiesQCOM = ?*const fn (Device, [*c]const RenderingInfo, [*c]TilePropertiesQCOM) callconv(.c) Result;
pub const PFN_getDynamicRenderingTilePropertiesQCOM = PFN_vkGetDynamicRenderingTilePropertiesQCOM;
const PFN_vkGetPhysicalDeviceCooperativeVectorPropertiesNV = ?*const fn (PhysicalDevice, [*c]u32, [*c]CooperativeVectorPropertiesNV) callconv(.c) Result;
pub const PFN_getPhysicalDeviceCooperativeVectorPropertiesNV = PFN_vkGetPhysicalDeviceCooperativeVectorPropertiesNV;
const PFN_vkConvertCooperativeVectorMatrixNV = ?*const fn (Device, [*c]const ConvertCooperativeVectorMatrixInfoNV) callconv(.c) Result;
pub const PFN_convertCooperativeVectorMatrixNV = PFN_vkConvertCooperativeVectorMatrixNV;
const PFN_vkCmdConvertCooperativeVectorMatrixNV = ?*const fn (CommandBuffer, u32, [*c]const ConvertCooperativeVectorMatrixInfoNV) callconv(.c) void;
pub const PFN_cmdConvertCooperativeVectorMatrixNV = PFN_vkCmdConvertCooperativeVectorMatrixNV;
const PFN_vkSetLatencySleepModeNV = ?*const fn (Device, SwapchainKHR, [*c]const LatencySleepModeInfoNV) callconv(.c) Result;
pub const PFN_setLatencySleepModeNV = PFN_vkSetLatencySleepModeNV;
const PFN_vkLatencySleepNV = ?*const fn (Device, SwapchainKHR, [*c]const LatencySleepInfoNV) callconv(.c) Result;
pub const PFN_latencySleepNV = PFN_vkLatencySleepNV;
const PFN_vkSetLatencyMarkerNV = ?*const fn (Device, SwapchainKHR, [*c]const SetLatencyMarkerInfoNV) callconv(.c) void;
pub const PFN_setLatencyMarkerNV = PFN_vkSetLatencyMarkerNV;
const PFN_vkGetLatencyTimingsNV = ?*const fn (Device, SwapchainKHR, [*c]GetLatencyMarkerInfoNV) callconv(.c) void;
pub const PFN_getLatencyTimingsNV = PFN_vkGetLatencyTimingsNV;
const PFN_vkQueueNotifyOutOfBandNV = ?*const fn (Queue, [*c]const OutOfBandQueueTypeInfoNV) callconv(.c) void;
pub const PFN_queueNotifyOutOfBandNV = PFN_vkQueueNotifyOutOfBandNV;
const PFN_vkCreateDataGraphPipelinesARM = ?*const fn (Device, DeferredOperationKHR, PipelineCache, u32, [*c]const DataGraphPipelineCreateInfoARM, [*c]const AllocationCallbacks, [*c]Pipeline) callconv(.c) Result;
pub const PFN_createDataGraphPipelinesARM = PFN_vkCreateDataGraphPipelinesARM;
const PFN_vkCreateDataGraphPipelineSessionARM = ?*const fn (Device, [*c]const DataGraphPipelineSessionCreateInfoARM, [*c]const AllocationCallbacks, [*c]DataGraphPipelineSessionARM) callconv(.c) Result;
pub const PFN_createDataGraphPipelineSessionARM = PFN_vkCreateDataGraphPipelineSessionARM;
const PFN_vkGetDataGraphPipelineSessionBindPointRequirementsARM = ?*const fn (Device, [*c]const DataGraphPipelineSessionBindPointRequirementsInfoARM, [*c]u32, [*c]DataGraphPipelineSessionBindPointRequirementARM) callconv(.c) Result;
pub const PFN_getDataGraphPipelineSessionBindPointRequirementsARM = PFN_vkGetDataGraphPipelineSessionBindPointRequirementsARM;
const PFN_vkGetDataGraphPipelineSessionMemoryRequirementsARM = ?*const fn (Device, [*c]const DataGraphPipelineSessionMemoryRequirementsInfoARM, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getDataGraphPipelineSessionMemoryRequirementsARM = PFN_vkGetDataGraphPipelineSessionMemoryRequirementsARM;
const PFN_vkBindDataGraphPipelineSessionMemoryARM = ?*const fn (Device, u32, [*c]const BindDataGraphPipelineSessionMemoryInfoARM) callconv(.c) Result;
pub const PFN_bindDataGraphPipelineSessionMemoryARM = PFN_vkBindDataGraphPipelineSessionMemoryARM;
const PFN_vkDestroyDataGraphPipelineSessionARM = ?*const fn (Device, DataGraphPipelineSessionARM, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyDataGraphPipelineSessionARM = PFN_vkDestroyDataGraphPipelineSessionARM;
const PFN_vkCmdDispatchDataGraphARM = ?*const fn (CommandBuffer, DataGraphPipelineSessionARM, [*c]const DataGraphPipelineDispatchInfoARM) callconv(.c) void;
pub const PFN_cmdDispatchDataGraphARM = PFN_vkCmdDispatchDataGraphARM;
const PFN_vkGetDataGraphPipelineAvailablePropertiesARM = ?*const fn (Device, [*c]const DataGraphPipelineInfoARM, [*c]u32, [*c]DataGraphPipelinePropertyARM) callconv(.c) Result;
pub const PFN_getDataGraphPipelineAvailablePropertiesARM = PFN_vkGetDataGraphPipelineAvailablePropertiesARM;
const PFN_vkGetDataGraphPipelinePropertiesARM = ?*const fn (Device, [*c]const DataGraphPipelineInfoARM, u32, [*c]DataGraphPipelinePropertyQueryResultARM) callconv(.c) Result;
pub const PFN_getDataGraphPipelinePropertiesARM = PFN_vkGetDataGraphPipelinePropertiesARM;
const PFN_vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM = ?*const fn (PhysicalDevice, u32, [*c]u32, [*c]QueueFamilyDataGraphPropertiesARM) callconv(.c) Result;
pub const PFN_getPhysicalDeviceQueueFamilyDataGraphPropertiesARM = PFN_vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM;
const PFN_vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceQueueFamilyDataGraphProcessingEngineInfoARM, [*c]QueueFamilyDataGraphProcessingEnginePropertiesARM) callconv(.c) void;
pub const PFN_getPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM = PFN_vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM;
const PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT = ?*const fn (CommandBuffer, ImageAspectFlags) callconv(.c) void;
pub const PFN_cmdSetAttachmentFeedbackLoopEnableEXT = PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT;
const PFN_vkCmdBindTileMemoryQCOM = ?*const fn (CommandBuffer, [*c]const TileMemoryBindInfoQCOM) callconv(.c) void;
pub const PFN_cmdBindTileMemoryQCOM = PFN_vkCmdBindTileMemoryQCOM;
const PFN_vkCreateExternalComputeQueueNV = ?*const fn (Device, [*c]const ExternalComputeQueueCreateInfoNV, [*c]const AllocationCallbacks, [*c]ExternalComputeQueueNV) callconv(.c) Result;
pub const PFN_createExternalComputeQueueNV = PFN_vkCreateExternalComputeQueueNV;
const PFN_vkDestroyExternalComputeQueueNV = ?*const fn (Device, ExternalComputeQueueNV, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyExternalComputeQueueNV = PFN_vkDestroyExternalComputeQueueNV;
const PFN_vkGetExternalComputeQueueDataNV = ?*const fn (ExternalComputeQueueNV, [*c]ExternalComputeQueueDataParamsNV, ?*anyopaque) callconv(.c) void;
pub const PFN_getExternalComputeQueueDataNV = PFN_vkGetExternalComputeQueueDataNV;
const PFN_vkGetClusterAccelerationStructureBuildSizesNV = ?*const fn (Device, [*c]const ClusterAccelerationStructureInputInfoNV, [*c]AccelerationStructureBuildSizesInfoKHR) callconv(.c) void;
pub const PFN_getClusterAccelerationStructureBuildSizesNV = PFN_vkGetClusterAccelerationStructureBuildSizesNV;
const PFN_vkCmdBuildClusterAccelerationStructureIndirectNV = ?*const fn (CommandBuffer, [*c]const ClusterAccelerationStructureCommandsInfoNV) callconv(.c) void;
pub const PFN_cmdBuildClusterAccelerationStructureIndirectNV = PFN_vkCmdBuildClusterAccelerationStructureIndirectNV;
const PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV = ?*const fn (Device, [*c]const PartitionedAccelerationStructureInstancesInputNV, [*c]AccelerationStructureBuildSizesInfoKHR) callconv(.c) void;
pub const PFN_getPartitionedAccelerationStructuresBuildSizesNV = PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV;
const PFN_vkCmdBuildPartitionedAccelerationStructuresNV = ?*const fn (CommandBuffer, [*c]const BuildPartitionedAccelerationStructureInfoNV) callconv(.c) void;
pub const PFN_cmdBuildPartitionedAccelerationStructuresNV = PFN_vkCmdBuildPartitionedAccelerationStructuresNV;
const PFN_vkGetGeneratedCommandsMemoryRequirementsEXT = ?*const fn (Device, [*c]const GeneratedCommandsMemoryRequirementsInfoEXT, [*c]MemoryRequirements2) callconv(.c) void;
pub const PFN_getGeneratedCommandsMemoryRequirementsEXT = PFN_vkGetGeneratedCommandsMemoryRequirementsEXT;
const PFN_vkCmdPreprocessGeneratedCommandsEXT = ?*const fn (CommandBuffer, [*c]const GeneratedCommandsInfoEXT, CommandBuffer) callconv(.c) void;
pub const PFN_cmdPreprocessGeneratedCommandsEXT = PFN_vkCmdPreprocessGeneratedCommandsEXT;
const PFN_vkCmdExecuteGeneratedCommandsEXT = ?*const fn (CommandBuffer, Bool32, [*c]const GeneratedCommandsInfoEXT) callconv(.c) void;
pub const PFN_cmdExecuteGeneratedCommandsEXT = PFN_vkCmdExecuteGeneratedCommandsEXT;
const PFN_vkCreateIndirectCommandsLayoutEXT = ?*const fn (Device, [*c]const IndirectCommandsLayoutCreateInfoEXT, [*c]const AllocationCallbacks, [*c]IndirectCommandsLayoutEXT) callconv(.c) Result;
pub const PFN_createIndirectCommandsLayoutEXT = PFN_vkCreateIndirectCommandsLayoutEXT;
const PFN_vkDestroyIndirectCommandsLayoutEXT = ?*const fn (Device, IndirectCommandsLayoutEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyIndirectCommandsLayoutEXT = PFN_vkDestroyIndirectCommandsLayoutEXT;
const PFN_vkCreateIndirectExecutionSetEXT = ?*const fn (Device, [*c]const IndirectExecutionSetCreateInfoEXT, [*c]const AllocationCallbacks, [*c]IndirectExecutionSetEXT) callconv(.c) Result;
pub const PFN_createIndirectExecutionSetEXT = PFN_vkCreateIndirectExecutionSetEXT;
const PFN_vkDestroyIndirectExecutionSetEXT = ?*const fn (Device, IndirectExecutionSetEXT, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyIndirectExecutionSetEXT = PFN_vkDestroyIndirectExecutionSetEXT;
const PFN_vkUpdateIndirectExecutionSetPipelineEXT = ?*const fn (Device, IndirectExecutionSetEXT, u32, [*c]const WriteIndirectExecutionSetPipelineEXT) callconv(.c) void;
pub const PFN_updateIndirectExecutionSetPipelineEXT = PFN_vkUpdateIndirectExecutionSetPipelineEXT;
const PFN_vkUpdateIndirectExecutionSetShaderEXT = ?*const fn (Device, IndirectExecutionSetEXT, u32, [*c]const WriteIndirectExecutionSetShaderEXT) callconv(.c) void;
pub const PFN_updateIndirectExecutionSetShaderEXT = PFN_vkUpdateIndirectExecutionSetShaderEXT;
const PFN_vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV = ?*const fn (PhysicalDevice, [*c]u32, [*c]CooperativeMatrixFlexibleDimensionsPropertiesNV) callconv(.c) Result;
pub const PFN_getPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV = PFN_vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV;
const PFN_vkCmdEndRendering2EXT = ?*const fn (CommandBuffer, [*c]const RenderingEndInfoEXT) callconv(.c) void;
pub const PFN_cmdEndRendering2EXT = PFN_vkCmdEndRendering2EXT;
const PFN_vkCreateAccelerationStructureKHR = ?*const fn (Device, [*c]const AccelerationStructureCreateInfoKHR, [*c]const AllocationCallbacks, [*c]AccelerationStructureKHR) callconv(.c) Result;
pub const PFN_createAccelerationStructureKHR = PFN_vkCreateAccelerationStructureKHR;
const PFN_vkDestroyAccelerationStructureKHR = ?*const fn (Device, AccelerationStructureKHR, [*c]const AllocationCallbacks) callconv(.c) void;
pub const PFN_destroyAccelerationStructureKHR = PFN_vkDestroyAccelerationStructureKHR;
const PFN_vkCmdBuildAccelerationStructuresKHR = ?*const fn (CommandBuffer, u32, [*c]const AccelerationStructureBuildGeometryInfoKHR, [*c]const [*c]const AccelerationStructureBuildRangeInfoKHR) callconv(.c) void;
pub const PFN_cmdBuildAccelerationStructuresKHR = PFN_vkCmdBuildAccelerationStructuresKHR;
const PFN_vkCmdBuildAccelerationStructuresIndirectKHR = ?*const fn (CommandBuffer, u32, [*c]const AccelerationStructureBuildGeometryInfoKHR, [*c]const DeviceAddress, [*c]const u32, [*c]const [*c]const u32) callconv(.c) void;
pub const PFN_cmdBuildAccelerationStructuresIndirectKHR = PFN_vkCmdBuildAccelerationStructuresIndirectKHR;
const PFN_vkBuildAccelerationStructuresKHR = ?*const fn (Device, DeferredOperationKHR, u32, [*c]const AccelerationStructureBuildGeometryInfoKHR, [*c]const [*c]const AccelerationStructureBuildRangeInfoKHR) callconv(.c) Result;
pub const PFN_buildAccelerationStructuresKHR = PFN_vkBuildAccelerationStructuresKHR;
const PFN_vkCopyAccelerationStructureKHR = ?*const fn (Device, DeferredOperationKHR, [*c]const CopyAccelerationStructureInfoKHR) callconv(.c) Result;
pub const PFN_copyAccelerationStructureKHR = PFN_vkCopyAccelerationStructureKHR;
const PFN_vkCopyAccelerationStructureToMemoryKHR = ?*const fn (Device, DeferredOperationKHR, [*c]const CopyAccelerationStructureToMemoryInfoKHR) callconv(.c) Result;
pub const PFN_copyAccelerationStructureToMemoryKHR = PFN_vkCopyAccelerationStructureToMemoryKHR;
const PFN_vkCopyMemoryToAccelerationStructureKHR = ?*const fn (Device, DeferredOperationKHR, [*c]const CopyMemoryToAccelerationStructureInfoKHR) callconv(.c) Result;
pub const PFN_copyMemoryToAccelerationStructureKHR = PFN_vkCopyMemoryToAccelerationStructureKHR;
const PFN_vkWriteAccelerationStructuresPropertiesKHR = ?*const fn (Device, u32, [*c]const AccelerationStructureKHR, QueryType, usize, ?*anyopaque, usize) callconv(.c) Result;
pub const PFN_writeAccelerationStructuresPropertiesKHR = PFN_vkWriteAccelerationStructuresPropertiesKHR;
const PFN_vkCmdCopyAccelerationStructureKHR = ?*const fn (CommandBuffer, [*c]const CopyAccelerationStructureInfoKHR) callconv(.c) void;
pub const PFN_cmdCopyAccelerationStructureKHR = PFN_vkCmdCopyAccelerationStructureKHR;
const PFN_vkCmdCopyAccelerationStructureToMemoryKHR = ?*const fn (CommandBuffer, [*c]const CopyAccelerationStructureToMemoryInfoKHR) callconv(.c) void;
pub const PFN_cmdCopyAccelerationStructureToMemoryKHR = PFN_vkCmdCopyAccelerationStructureToMemoryKHR;
const PFN_vkCmdCopyMemoryToAccelerationStructureKHR = ?*const fn (CommandBuffer, [*c]const CopyMemoryToAccelerationStructureInfoKHR) callconv(.c) void;
pub const PFN_cmdCopyMemoryToAccelerationStructureKHR = PFN_vkCmdCopyMemoryToAccelerationStructureKHR;
const PFN_vkGetAccelerationStructureDeviceAddressKHR = ?*const fn (Device, [*c]const AccelerationStructureDeviceAddressInfoKHR) callconv(.c) DeviceAddress;
pub const PFN_getAccelerationStructureDeviceAddressKHR = PFN_vkGetAccelerationStructureDeviceAddressKHR;
const PFN_vkCmdWriteAccelerationStructuresPropertiesKHR = ?*const fn (CommandBuffer, u32, [*c]const AccelerationStructureKHR, QueryType, QueryPool, u32) callconv(.c) void;
pub const PFN_cmdWriteAccelerationStructuresPropertiesKHR = PFN_vkCmdWriteAccelerationStructuresPropertiesKHR;
const PFN_vkGetDeviceAccelerationStructureCompatibilityKHR = ?*const fn (Device, [*c]const AccelerationStructureVersionInfoKHR, [*c]AccelerationStructureCompatibilityKHR) callconv(.c) void;
pub const PFN_getDeviceAccelerationStructureCompatibilityKHR = PFN_vkGetDeviceAccelerationStructureCompatibilityKHR;
const PFN_vkGetAccelerationStructureBuildSizesKHR = ?*const fn (Device, AccelerationStructureBuildTypeKHR, [*c]const AccelerationStructureBuildGeometryInfoKHR, [*c]const u32, [*c]AccelerationStructureBuildSizesInfoKHR) callconv(.c) void;
pub const PFN_getAccelerationStructureBuildSizesKHR = PFN_vkGetAccelerationStructureBuildSizesKHR;
const PFN_vkCmdTraceRaysKHR = ?*const fn (CommandBuffer, [*c]const StridedDeviceAddressRegionKHR, [*c]const StridedDeviceAddressRegionKHR, [*c]const StridedDeviceAddressRegionKHR, [*c]const StridedDeviceAddressRegionKHR, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdTraceRaysKHR = PFN_vkCmdTraceRaysKHR;
const PFN_vkCreateRayTracingPipelinesKHR = ?*const fn (Device, DeferredOperationKHR, PipelineCache, u32, [*c]const RayTracingPipelineCreateInfoKHR, [*c]const AllocationCallbacks, [*c]Pipeline) callconv(.c) Result;
pub const PFN_createRayTracingPipelinesKHR = PFN_vkCreateRayTracingPipelinesKHR;
const PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = ?*const fn (Device, Pipeline, u32, u32, usize, ?*anyopaque) callconv(.c) Result;
pub const PFN_getRayTracingCaptureReplayShaderGroupHandlesKHR = PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
const PFN_vkCmdTraceRaysIndirectKHR = ?*const fn (CommandBuffer, [*c]const StridedDeviceAddressRegionKHR, [*c]const StridedDeviceAddressRegionKHR, [*c]const StridedDeviceAddressRegionKHR, [*c]const StridedDeviceAddressRegionKHR, DeviceAddress) callconv(.c) void;
pub const PFN_cmdTraceRaysIndirectKHR = PFN_vkCmdTraceRaysIndirectKHR;
const PFN_vkGetRayTracingShaderGroupStackSizeKHR = ?*const fn (Device, Pipeline, u32, ShaderGroupShaderKHR) callconv(.c) DeviceSize;
pub const PFN_getRayTracingShaderGroupStackSizeKHR = PFN_vkGetRayTracingShaderGroupStackSizeKHR;
const PFN_vkCmdSetRayTracingPipelineStackSizeKHR = ?*const fn (CommandBuffer, u32) callconv(.c) void;
pub const PFN_cmdSetRayTracingPipelineStackSizeKHR = PFN_vkCmdSetRayTracingPipelineStackSizeKHR;
const PFN_vkCmdDrawMeshTasksEXT = ?*const fn (CommandBuffer, u32, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMeshTasksEXT = PFN_vkCmdDrawMeshTasksEXT;
const PFN_vkCmdDrawMeshTasksIndirectEXT = ?*const fn (CommandBuffer, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMeshTasksIndirectEXT = PFN_vkCmdDrawMeshTasksIndirectEXT;
const PFN_vkCmdDrawMeshTasksIndirectCountEXT = ?*const fn (CommandBuffer, Buffer, DeviceSize, Buffer, DeviceSize, u32, u32) callconv(.c) void;
pub const PFN_cmdDrawMeshTasksIndirectCountEXT = PFN_vkCmdDrawMeshTasksIndirectCountEXT;
const PFN_vkCreateWin32SurfaceKHR = ?*const fn (Instance, [*c]const Win32SurfaceCreateInfoKHR, [*c]const AllocationCallbacks, [*c]SurfaceKHR) callconv(.c) Result;
pub const PFN_createWin32SurfaceKHR = PFN_vkCreateWin32SurfaceKHR;
const PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR = ?*const fn (PhysicalDevice, u32) callconv(.c) Bool32;
pub const PFN_getPhysicalDeviceWin32PresentationSupportKHR = PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR;
const PFN_vkGetMemoryWin32HandleKHR = ?*const fn (Device, [*c]const MemoryGetWin32HandleInfoKHR, [*c]HANDLE) callconv(.c) Result;
pub const PFN_getMemoryWin32HandleKHR = PFN_vkGetMemoryWin32HandleKHR;
const PFN_vkGetMemoryWin32HandlePropertiesKHR = ?*const fn (Device, ExternalMemoryHandleTypeFlagBits, HANDLE, [*c]MemoryWin32HandlePropertiesKHR) callconv(.c) Result;
pub const PFN_getMemoryWin32HandlePropertiesKHR = PFN_vkGetMemoryWin32HandlePropertiesKHR;
const PFN_vkImportSemaphoreWin32HandleKHR = ?*const fn (Device, [*c]const ImportSemaphoreWin32HandleInfoKHR) callconv(.c) Result;
pub const PFN_importSemaphoreWin32HandleKHR = PFN_vkImportSemaphoreWin32HandleKHR;
const PFN_vkGetSemaphoreWin32HandleKHR = ?*const fn (Device, [*c]const SemaphoreGetWin32HandleInfoKHR, [*c]HANDLE) callconv(.c) Result;
pub const PFN_getSemaphoreWin32HandleKHR = PFN_vkGetSemaphoreWin32HandleKHR;
const PFN_vkImportFenceWin32HandleKHR = ?*const fn (Device, [*c]const ImportFenceWin32HandleInfoKHR) callconv(.c) Result;
pub const PFN_importFenceWin32HandleKHR = PFN_vkImportFenceWin32HandleKHR;
const PFN_vkGetFenceWin32HandleKHR = ?*const fn (Device, [*c]const FenceGetWin32HandleInfoKHR, [*c]HANDLE) callconv(.c) Result;
pub const PFN_getFenceWin32HandleKHR = PFN_vkGetFenceWin32HandleKHR;
const PFN_vkGetMemoryWin32HandleNV = ?*const fn (Device, DeviceMemory, ExternalMemoryHandleTypeFlagsNV, [*c]HANDLE) callconv(.c) Result;
pub const PFN_getMemoryWin32HandleNV = PFN_vkGetMemoryWin32HandleNV;
const PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT = ?*const fn (PhysicalDevice, [*c]const PhysicalDeviceSurfaceInfo2KHR, [*c]u32, [*c]PresentModeKHR) callconv(.c) Result;
pub const PFN_getPhysicalDeviceSurfacePresentModes2EXT = PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT;
const PFN_vkAcquireFullScreenExclusiveModeEXT = ?*const fn (Device, SwapchainKHR) callconv(.c) Result;
pub const PFN_acquireFullScreenExclusiveModeEXT = PFN_vkAcquireFullScreenExclusiveModeEXT;
const PFN_vkReleaseFullScreenExclusiveModeEXT = ?*const fn (Device, SwapchainKHR) callconv(.c) Result;
pub const PFN_releaseFullScreenExclusiveModeEXT = PFN_vkReleaseFullScreenExclusiveModeEXT;
const PFN_vkGetDeviceGroupSurfacePresentModes2EXT = ?*const fn (Device, [*c]const PhysicalDeviceSurfaceInfo2KHR, [*c]DeviceGroupPresentModeFlagsKHR) callconv(.c) Result;
pub const PFN_getDeviceGroupSurfacePresentModes2EXT = PFN_vkGetDeviceGroupSurfacePresentModes2EXT;
const PFN_vkAcquireWinrtDisplayNV = ?*const fn (PhysicalDevice, DisplayKHR) callconv(.c) Result;
pub const PFN_acquireWinrtDisplayNV = PFN_vkAcquireWinrtDisplayNV;
const PFN_vkGetWinrtDisplayNV = ?*const fn (PhysicalDevice, u32, [*c]DisplayKHR) callconv(.c) Result;
pub const PFN_getWinrtDisplayNV = PFN_vkGetWinrtDisplayNV;
